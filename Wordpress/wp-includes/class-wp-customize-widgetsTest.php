<?php

namespace tests;

use Mockery as m;
use WP_Customize_Widgets;

class WP_Customize_WidgetsTest extends \PHPUnit_Framework_TestCase
{
/**
* @var mixed
*/
protected $_manager = null;
/**
* @var \WP_Customize_Widgets
*/
protected $wP_Customize_Widgets;

public function setUp()
{
    parent::setUp();

    $this->_manager = null;
    $this->wP_Customize_Widgets = new \WP_Customize_Widgets($this->_manager);
}

public function testGet_selective_refreshable_widgets0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 146)
    // if (!isset($this->selective_refreshable_widgets)) == false (line 149)

    $actual = $this->wP_Customize_Widgets->get_selective_refreshable_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_selective_refreshable_widgets1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 146)
    // if (!isset($this->selective_refreshable_widgets)) == true (line 149)

    $actual = $this->wP_Customize_Widgets->get_selective_refreshable_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_selective_refreshable_widgets2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 146)
    // if (!isset($this->selective_refreshable_widgets)) == true (line 149)

    $actual = $this->wP_Customize_Widgets->get_selective_refreshable_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_selective_refreshable_widgets3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == true (line 146)

    $actual = $this->wP_Customize_Widgets->get_selective_refreshable_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testIs_widget_selective_refreshable0()
{
    $id_base = m::mock('UntypedParameter_id_base_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->is_widget_selective_refreshable($id_base);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == false (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == false (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings4()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings5()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings6()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == false (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == false (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings7()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == false (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings8()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == false (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings9()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == false (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == false (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings10()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == false (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings11()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == false (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings12()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == true (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == false (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings13()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == true (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings14()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == true (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == false (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings15()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == true (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == false (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings16()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == true (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRegister_settings17()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($this->get_setting_type($setting_id))) == true (line 204)
    // if ($this->manager->doing_ajax('update-widget') && isset($_REQUEST['widget-id'])) == true (line 208)
    // if ($this->manager->settings_previewed()) == true (line 214)

    $actual = $this->wP_Customize_Widgets->register_settings();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_customize_dynamic_setting_args0()
{
    $args = m::mock('UntypedParameter_args_');
    $setting_id = m::mock('UntypedParameter_setting_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->get_setting_type($setting_id)) == false (line 231)

    $actual = $this->wP_Customize_Widgets->filter_customize_dynamic_setting_args($args, $setting_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_customize_dynamic_setting_args1()
{
    $args = m::mock('UntypedParameter_args_');
    $setting_id = m::mock('UntypedParameter_setting_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->get_setting_type($setting_id)) == true (line 231)

    $actual = $this->wP_Customize_Widgets->filter_customize_dynamic_setting_args($args, $setting_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testOverride_sidebars_widgets_for_theme_switch0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax() || $this->manager->is_theme_active()) == false (line 271)

    $actual = $this->wP_Customize_Widgets->override_sidebars_widgets_for_theme_switch();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testOverride_sidebars_widgets_for_theme_switch1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->manager->doing_ajax() || $this->manager->is_theme_active()) == true (line 271)

    $actual = $this->wP_Customize_Widgets->override_sidebars_widgets_for_theme_switch();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_customize_value_old_sidebars_widgets_data0()
{
    $old_sidebars_widgets = m::mock('UntypedParameter_old_sidebars_widgets_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->filter_customize_value_old_sidebars_widgets_data($old_sidebars_widgets);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_option_sidebars_widgets_for_theme_switch0()
{
    $sidebars_widgets = m::mock('UntypedParameter_sidebars_widgets_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->filter_option_sidebars_widgets_for_theme_switch($sidebars_widgets);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_controls_init0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->customize_controls_init();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSchedule_customize_register0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_admin()) == false (line 354)

    $actual = $this->wP_Customize_Widgets->schedule_customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSchedule_customize_register1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_admin()) == true (line 354)

    $actual = $this->wP_Customize_Widgets->schedule_customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register4()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register5()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register6()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register7()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register8()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register9()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register10()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register11()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register12()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register13()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register14()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register15()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register16()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register17()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register18()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register19()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register20()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register21()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register22()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register23()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register24()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register25()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register26()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register27()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register28()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register29()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register30()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register31()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register32()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register33()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register34()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register35()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register36()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register37()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register38()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register39()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register40()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register41()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register42()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register43()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register44()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register45()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register46()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register47()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register48()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register49()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register50()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register51()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register52()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register53()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register54()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register55()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register56()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register57()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register58()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register59()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register60()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register61()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register62()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register63()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register64()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register65()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register66()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register67()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register68()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register69()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register70()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register71()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register72()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register73()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register74()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register75()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register76()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register77()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register78()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register79()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register80()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register81()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register82()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register83()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register84()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register85()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register86()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register87()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register88()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register89()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register90()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register91()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register92()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register93()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register94()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register95()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register96()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register97()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register98()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register99()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register100()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register101()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register102()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register103()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register104()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register105()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register106()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register107()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register108()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register109()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register110()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register111()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register112()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register113()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register114()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register115()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register116()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register117()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register118()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register119()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register120()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register121()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register122()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register123()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register124()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register125()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register126()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register127()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register128()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register129()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register130()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register131()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register132()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register133()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register134()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register135()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register136()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register137()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register138()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register139()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register140()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register141()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register142()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register143()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register144()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register145()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register146()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register147()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register148()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register149()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register150()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register151()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register152()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register153()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register154()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register155()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register156()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register157()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register158()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register159()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register160()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register161()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register162()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register163()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register164()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register165()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register166()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register167()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register168()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register169()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register170()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register171()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register172()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register173()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register174()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register175()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register176()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register177()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register178()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register179()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register180()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register181()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register182()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register183()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register184()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register185()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register186()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register187()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register188()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register189()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register190()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register191()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register192()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register193()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register194()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register195()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register196()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register197()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register198()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register199()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register200()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register201()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register202()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register203()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register204()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register205()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register206()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register207()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register208()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register209()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register210()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register211()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register212()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register213()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register214()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register215()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register216()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register217()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register218()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register219()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register220()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register221()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register222()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register223()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register224()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register225()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register226()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register227()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register228()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register229()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register230()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register231()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register232()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register233()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register234()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register235()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register236()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register237()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register238()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register239()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register240()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register241()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register242()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register243()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register244()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register245()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register246()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register247()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register248()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register249()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register250()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register251()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register252()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register253()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register254()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register255()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register256()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register257()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register258()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register259()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register260()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register261()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register262()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register263()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register264()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register265()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register266()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register267()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register268()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register269()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register270()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register271()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register272()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register273()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register274()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register275()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register276()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register277()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register278()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register279()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register280()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register281()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register282()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register283()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register284()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register285()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register286()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register287()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register288()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register289()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register290()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register291()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register292()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register293()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register294()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register295()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register296()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register297()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register298()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register299()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register300()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register301()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register302()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register303()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register304()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register305()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register306()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register307()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register308()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register309()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register310()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register311()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register312()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register313()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register314()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register315()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register316()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register317()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register318()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register319()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register320()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register321()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register322()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register323()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register324()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register325()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register326()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register327()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register328()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register329()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register330()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register331()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register332()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register333()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register334()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register335()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register336()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register337()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register338()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register339()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register340()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register341()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register342()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register343()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register344()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register345()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register346()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register347()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register348()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register349()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register350()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register351()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register352()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register353()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register354()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register355()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register356()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register357()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register358()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register359()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register360()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register361()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register362()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register363()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register364()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register365()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register366()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register367()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register368()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register369()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register370()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register371()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register372()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register373()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register374()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register375()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register376()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register377()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register378()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register379()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register380()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register381()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register382()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register383()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register384()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register385()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register386()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register387()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register388()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register389()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register390()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register391()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register392()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register393()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register394()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register395()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register396()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register397()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register398()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register399()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register400()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register401()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register402()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register403()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register404()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register405()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register406()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register407()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register408()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register409()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register410()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register411()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register412()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register413()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register414()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register415()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register416()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register417()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register418()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register419()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register420()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register421()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register422()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register423()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register424()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register425()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register426()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register427()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register428()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register429()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register430()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register431()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register432()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register433()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register434()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register435()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register436()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register437()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register438()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register439()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register440()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register441()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register442()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register443()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register444()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register445()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register446()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register447()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register448()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register449()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register450()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register451()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register452()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register453()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register454()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register455()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register456()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register457()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register458()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register459()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register460()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register461()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register462()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register463()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register464()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register465()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register466()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register467()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register468()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register469()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register470()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register471()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register472()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register473()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register474()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register475()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register476()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register477()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register478()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register479()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register480()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register481()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register482()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register483()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register484()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register485()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register486()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register487()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register488()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register489()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register490()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register491()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register492()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register493()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register494()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register495()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register496()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register497()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register498()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register499()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register500()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register501()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register502()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register503()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register504()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register505()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register506()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register507()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register508()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register509()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register510()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register511()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register512()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register513()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register514()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register515()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == false (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register516()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register517()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register518()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register519()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register520()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register521()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register522()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register523()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register524()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register525()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register526()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register527()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register528()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register529()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register530()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register531()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register532()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register533()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register534()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register535()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register536()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register537()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register538()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register539()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register540()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register541()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register542()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register543()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register544()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register545()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register546()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register547()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register548()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register549()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register550()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register551()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register552()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register553()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register554()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register555()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register556()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register557()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register558()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register559()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register560()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register561()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register562()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register563()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register564()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register565()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register566()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register567()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register568()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register569()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register570()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register571()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register572()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register573()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register574()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register575()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register576()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register577()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register578()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register579()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register580()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register581()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register582()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register583()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register584()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register585()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register586()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register587()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register588()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register589()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register590()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register591()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register592()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register593()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register594()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register595()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register596()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register597()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register598()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register599()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register600()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register601()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register602()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register603()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register604()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register605()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register606()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register607()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register608()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register609()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register610()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register611()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register612()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register613()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register614()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register615()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register616()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register617()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register618()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register619()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register620()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register621()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register622()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register623()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register624()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register625()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register626()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register627()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register628()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register629()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register630()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register631()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register632()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register633()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register634()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register635()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register636()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register637()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register638()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register639()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register640()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register641()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register642()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register643()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register644()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == false (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register645()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register646()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register647()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register648()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register649()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register650()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register651()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register652()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register653()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register654()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register655()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register656()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register657()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register658()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register659()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register660()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register661()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register662()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register663()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register664()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register665()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register666()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register667()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register668()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register669()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register670()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register671()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register672()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register673()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register674()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register675()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register676()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register677()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register678()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register679()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register680()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register681()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register682()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register683()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register684()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register685()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register686()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register687()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register688()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register689()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register690()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register691()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register692()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register693()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register694()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register695()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register696()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register697()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register698()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register699()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register700()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register701()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register702()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register703()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register704()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register705()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register706()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register707()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register708()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register709()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register710()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == false (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register711()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register712()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register713()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register714()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register715()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register716()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register717()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register718()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register719()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == false (line 433)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register720()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register721()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register722()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register723()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register724()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register725()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register726()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register727()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register728()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register729()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register730()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register731()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register732()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register733()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register734()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register735()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register736()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register737()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == false (line 436)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register738()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register739()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register740()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register741()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register742()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register743()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register744()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register745()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register746()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register747()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register748()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register749()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register750()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register751()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register752()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register753()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register754()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register755()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == false (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register756()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register757()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register758()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register759()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register760()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register761()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register762()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register763()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register764()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == false (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register765()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register766()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register767()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register768()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register769()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register770()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == false (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register771()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == false (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register772()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_register773()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->get_setting($setting_id)) == true (line 391)
    // if (!$this->manager->is_theme_active()) == true (line 401)
    // if (empty($sidebar_widget_ids)) == true (line 424)
    // if ($is_registered_sidebar || $is_inactive_widgets) == true (line 433)
    // if (!$this->manager->get_setting($setting_id)) == true (line 436)
    // if (!$this->manager->is_theme_active()) == true (line 437)
    // if ($is_active_sidebar) == true (line 446)
    // if (!$is_active_sidebar || !isset($wp_registered_widgets[$widget_id])) == true (line 487)
    // if ($this->manager->settings_previewed()) == true (line 512)

    $actual = $this->wP_Customize_Widgets->customize_register();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testIs_panel_active0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->is_panel_active();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_setting_id0()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($parsed_widget_id['number'])) == false (line 546)

    $actual = $this->wP_Customize_Widgets->get_setting_id($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_setting_id1()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_null($parsed_widget_id['number'])) == true (line 546)

    $actual = $this->wP_Customize_Widgets->get_setting_id($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testIs_wide_widget0()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->is_wide_widget($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testParse_widget_id0()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\preg_match('/^(.+)-(\\d+)$/', $widget_id, $matches)) == false (line 602)

    $actual = $this->wP_Customize_Widgets->parse_widget_id($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testParse_widget_id1()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\preg_match('/^(.+)-(\\d+)$/', $widget_id, $matches)) == true (line 602)

    $actual = $this->wP_Customize_Widgets->parse_widget_id($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testParse_widget_setting_id0()
{
    $setting_id = m::mock('UntypedParameter_setting_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\preg_match('/^(widget_(.+?))(?:\\[(\\d+)\\])?$/', $setting_id, $matches)) == false (line 622)

    $actual = $this->wP_Customize_Widgets->parse_widget_setting_id($setting_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testParse_widget_setting_id1()
{
    $setting_id = m::mock('UntypedParameter_setting_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\preg_match('/^(widget_(.+?))(?:\\[(\\d+)\\])?$/', $setting_id, $matches)) == true (line 622)

    $actual = $this->wP_Customize_Widgets->parse_widget_setting_id($setting_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPrint_styles0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->print_styles();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPrint_scripts0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->print_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts4()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts5()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts6()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts7()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts8()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts9()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts10()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts11()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts12()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts13()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == false (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts14()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnqueue_scripts15()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 726)
    // for (...) == false (line 726)
    // if (1 === $registered_sidebar_count) == true (line 740)

    $actual = $this->wP_Customize_Widgets->enqueue_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testOutput_widget_control_templates0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->output_widget_control_templates();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testOutput_widget_control_templates1()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->output_widget_control_templates();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPrint_footer_scripts0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->print_footer_scripts();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_setting_args0()
{
    $id = m::mock('UntypedParameter_id_');
    $overrides = m::mock('UntypedParameter_overrides_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\preg_match($this->setting_id_patterns['sidebar_widgets'], $id, $matches)) == false (line 876)
    // if (\preg_match($this->setting_id_patterns['widget_instance'], $id, $matches)) == false (line 880)

    $actual = $this->wP_Customize_Widgets->get_setting_args($id, $overrides);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_setting_args1()
{
    $id = m::mock('UntypedParameter_id_');
    $overrides = m::mock('UntypedParameter_overrides_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\preg_match($this->setting_id_patterns['sidebar_widgets'], $id, $matches)) == false (line 876)
    // if (\preg_match($this->setting_id_patterns['widget_instance'], $id, $matches)) == true (line 880)

    $actual = $this->wP_Customize_Widgets->get_setting_args($id, $overrides);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_setting_args2()
{
    $id = m::mock('UntypedParameter_id_');
    $overrides = m::mock('UntypedParameter_overrides_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\preg_match($this->setting_id_patterns['sidebar_widgets'], $id, $matches)) == true (line 876)

    $actual = $this->wP_Customize_Widgets->get_setting_args($id, $overrides);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_sidebar_widgets0()
{
    $widget_ids = m::mock('UntypedParameter_widget_ids_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->sanitize_sidebar_widgets($widget_ids);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_sidebar_widgets1()
{
    $widget_ids = m::mock('UntypedParameter_widget_ids_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->sanitize_sidebar_widgets($widget_ids);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == false (line 947)
    // if (!isset($widget['params'][0])) == false (line 954)
    // if ($is_multi_widget) == false (line 969)
    // if ($sidebar && 'wp_inactive_widgets' !== $sidebar) == false (line 977)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == false (line 947)
    // if (!isset($widget['params'][0])) == false (line 954)
    // if ($is_multi_widget) == false (line 969)
    // if ($sidebar && 'wp_inactive_widgets' !== $sidebar) == true (line 977)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == false (line 947)
    // if (!isset($widget['params'][0])) == false (line 954)
    // if ($is_multi_widget) == true (line 969)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets4()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == false (line 947)
    // if (!isset($widget['params'][0])) == true (line 954)
    // if ($is_multi_widget) == false (line 969)
    // if ($sidebar && 'wp_inactive_widgets' !== $sidebar) == false (line 977)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets5()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == false (line 947)
    // if (!isset($widget['params'][0])) == true (line 954)
    // if ($is_multi_widget) == false (line 969)
    // if ($sidebar && 'wp_inactive_widgets' !== $sidebar) == true (line 977)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets6()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == false (line 947)
    // if (!isset($widget['params'][0])) == true (line 954)
    // if ($is_multi_widget) == true (line 969)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets7()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == false (line 935)
    // if (\in_array($widget['callback'], $done, \true)) == true (line 947)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_available_widgets8()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!empty($available_widgets)) == true (line 935)

    $actual = $this->wP_Customize_Widgets->get_available_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_widget_control0()
{
    $args = m::mock('UntypedParameter_args_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->get_widget_control($args);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_widget_control_parts0()
{
    $args = m::mock('UntypedParameter_args_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->get_widget_control_parts($args);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_preview_init0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->customize_preview_init();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRefresh_nonces0()
{
    $nonces = m::mock('UntypedParameter_nonces_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->refresh_nonces($nonces);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPreview_sidebars_widgets0()
{
    $sidebars_widgets = m::mock('UntypedParameter_sidebars_widgets_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->preview_sidebars_widgets($sidebars_widgets);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_preview_enqueue0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->customize_preview_enqueue();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPrint_preview_css0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->print_preview_css();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testExport_preview_data0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($switched_locale) == false (line 1166)

    $actual = $this->wP_Customize_Widgets->export_preview_data();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testExport_preview_data1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($switched_locale) == false (line 1166)

    $actual = $this->wP_Customize_Widgets->export_preview_data();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testExport_preview_data2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($switched_locale) == true (line 1166)

    $actual = $this->wP_Customize_Widgets->export_preview_data();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testExport_preview_data3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($switched_locale) == true (line 1166)

    $actual = $this->wP_Customize_Widgets->export_preview_data();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testTally_rendered_widgets0()
{
    $widget = m::mock('UntypedParameter_widget_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->tally_rendered_widgets($widget);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testIs_widget_rendered0()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->is_widget_rendered($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testIs_sidebar_rendered0()
{
    $sidebar_id = m::mock('UntypedParameter_sidebar_id_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->is_sidebar_rendered($sidebar_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testTally_sidebars_via_is_active_sidebar_calls0()
{
    $is_active = m::mock('UntypedParameter_is_active_');
    $sidebar_id = m::mock('UntypedParameter_sidebar_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_registered_sidebar($sidebar_id)) == false (line 1239)

    $actual = $this->wP_Customize_Widgets->tally_sidebars_via_is_active_sidebar_calls($is_active, $sidebar_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testTally_sidebars_via_is_active_sidebar_calls1()
{
    $is_active = m::mock('UntypedParameter_is_active_');
    $sidebar_id = m::mock('UntypedParameter_sidebar_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_registered_sidebar($sidebar_id)) == true (line 1239)

    $actual = $this->wP_Customize_Widgets->tally_sidebars_via_is_active_sidebar_calls($is_active, $sidebar_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testTally_sidebars_via_dynamic_sidebar_calls0()
{
    $has_widgets = m::mock('UntypedParameter_has_widgets_');
    $sidebar_id = m::mock('UntypedParameter_sidebar_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_registered_sidebar($sidebar_id)) == false (line 1264)

    $actual = $this->wP_Customize_Widgets->tally_sidebars_via_dynamic_sidebar_calls($has_widgets, $sidebar_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testTally_sidebars_via_dynamic_sidebar_calls1()
{
    $has_widgets = m::mock('UntypedParameter_has_widgets_');
    $sidebar_id = m::mock('UntypedParameter_sidebar_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_registered_sidebar($sidebar_id)) == true (line 1264)

    $actual = $this->wP_Customize_Widgets->tally_sidebars_via_dynamic_sidebar_calls($has_widgets, $sidebar_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_instance0()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($value === array()) == false (line 1303)
    // if (empty($value['is_widget_customizer_js_value']) || empty($value['instance_hash_key']) || empty($value['encoded_serialized_instance'])) == false (line 1307)
    // if (\false === $decoded) == false (line 1314)
    // if (!\hash_equals($this->get_instance_hash_key($decoded), $value['instance_hash_key'])) == false (line 1318)
    // if (\false === $instance) == false (line 1323)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_instance1()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($value === array()) == false (line 1303)
    // if (empty($value['is_widget_customizer_js_value']) || empty($value['instance_hash_key']) || empty($value['encoded_serialized_instance'])) == false (line 1307)
    // if (\false === $decoded) == false (line 1314)
    // if (!\hash_equals($this->get_instance_hash_key($decoded), $value['instance_hash_key'])) == false (line 1318)
    // if (\false === $instance) == true (line 1323)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_instance2()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($value === array()) == false (line 1303)
    // if (empty($value['is_widget_customizer_js_value']) || empty($value['instance_hash_key']) || empty($value['encoded_serialized_instance'])) == false (line 1307)
    // if (\false === $decoded) == false (line 1314)
    // if (!\hash_equals($this->get_instance_hash_key($decoded), $value['instance_hash_key'])) == true (line 1318)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_instance3()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($value === array()) == false (line 1303)
    // if (empty($value['is_widget_customizer_js_value']) || empty($value['instance_hash_key']) || empty($value['encoded_serialized_instance'])) == false (line 1307)
    // if (\false === $decoded) == true (line 1314)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_instance4()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($value === array()) == false (line 1303)
    // if (empty($value['is_widget_customizer_js_value']) || empty($value['instance_hash_key']) || empty($value['encoded_serialized_instance'])) == true (line 1307)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_instance5()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($value === array()) == true (line 1303)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_js_instance0()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($value['is_widget_customizer_js_value'])) == false (line 1339)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_js_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_widget_js_instance1()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($value['is_widget_customizer_js_value'])) == true (line 1339)

    $actual = $this->wP_Customize_Widgets->sanitize_widget_js_instance($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSanitize_sidebar_widgets_js_instance0()
{
    $widget_ids = m::mock('UntypedParameter_widget_ids_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->sanitize_sidebar_widgets_js_instance($widget_ids);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update0()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update1()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update2()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update3()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update4()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update5()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update6()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update7()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update8()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update9()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update10()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update11()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update12()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update13()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update14()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update15()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update16()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update17()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update18()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update19()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update20()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update21()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update22()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update23()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update24()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update25()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update26()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update27()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update28()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update29()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update30()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update31()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update32()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update33()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update34()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update35()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update36()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update37()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update38()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update39()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update40()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update41()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update42()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update43()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update44()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update45()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update46()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update47()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update48()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update49()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update50()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update51()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update52()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update53()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update54()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update55()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update56()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update57()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update58()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update59()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update60()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update61()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update62()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update63()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update64()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update65()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update66()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update67()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update68()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update69()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update70()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update71()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update72()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update73()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update74()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update75()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update76()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update77()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update78()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update79()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update80()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update81()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update82()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update83()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update84()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update85()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update86()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update87()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update88()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update89()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update90()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update91()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update92()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update93()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update94()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update95()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update96()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update97()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update98()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update99()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update100()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update101()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update102()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update103()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update104()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update105()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update106()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update107()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update108()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update109()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update110()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update111()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update112()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update113()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update114()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update115()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update116()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update117()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update118()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update119()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update120()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update121()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update122()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update123()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update124()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update125()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update126()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update127()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update128()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update129()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update130()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update131()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update132()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update133()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update134()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update135()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update136()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update137()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update138()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update139()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update140()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update141()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update142()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update143()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update144()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update145()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update146()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update147()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update148()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update149()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update150()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update151()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update152()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update153()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update154()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update155()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update156()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update157()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update158()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update159()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update160()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update161()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update162()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update163()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update164()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update165()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update166()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update167()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update168()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update169()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update170()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update171()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update172()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update173()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update174()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update175()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update176()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update177()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update178()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update179()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update180()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update181()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update182()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update183()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update184()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update185()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update186()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update187()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update188()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update189()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update190()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update191()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update192()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update193()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update194()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update195()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update196()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update197()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update198()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update199()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update200()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update201()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update202()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update203()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update204()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update205()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update206()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update207()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update208()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update209()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update210()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update211()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update212()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update213()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update214()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update215()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update216()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update217()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update218()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update219()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update220()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update221()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update222()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update223()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update224()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update225()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update226()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update227()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update228()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update229()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update230()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update231()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update232()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update233()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update234()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update235()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update236()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update237()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update238()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update239()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update240()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == true (line 1419)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update241()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == false (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == true (line 1413)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update242()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update243()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update244()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update245()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update246()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update247()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update248()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update249()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update250()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update251()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update252()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update253()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update254()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update255()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update256()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update257()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update258()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update259()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update260()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update261()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update262()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update263()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update264()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update265()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update266()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update267()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update268()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update269()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update270()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update271()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update272()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update273()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update274()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update275()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update276()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update277()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update278()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update279()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update280()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update281()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update282()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update283()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update284()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update285()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update286()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update287()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update288()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update289()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update290()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update291()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update292()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update293()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update294()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update295()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update296()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update297()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update298()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update299()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update300()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update301()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update302()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update303()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update304()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update305()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update306()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update307()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update308()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update309()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update310()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update311()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update312()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update313()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update314()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update315()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update316()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update317()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update318()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update319()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update320()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update321()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update322()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update323()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update324()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update325()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update326()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update327()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update328()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update329()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update330()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update331()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update332()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update333()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update334()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update335()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update336()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update337()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update338()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update339()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update340()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update341()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update342()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update343()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update344()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update345()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update346()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update347()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update348()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update349()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update350()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update351()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update352()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update353()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update354()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update355()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update356()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update357()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update358()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update359()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update360()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update361()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update362()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update363()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update364()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update365()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update366()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update367()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update368()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update369()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update370()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update371()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update372()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update373()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update374()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update375()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update376()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update377()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update378()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update379()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update380()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update381()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update382()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update383()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update384()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update385()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update386()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update387()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update388()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update389()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update390()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update391()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update392()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update393()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update394()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update395()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update396()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update397()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update398()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update399()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update400()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update401()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update402()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update403()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update404()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update405()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update406()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update407()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update408()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update409()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update410()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update411()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update412()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update413()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update414()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update415()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update416()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update417()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update418()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update419()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update420()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update421()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update422()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update423()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update424()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update425()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update426()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update427()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update428()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update429()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update430()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update431()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update432()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update433()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update434()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update435()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update436()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update437()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update438()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update439()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update440()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update441()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update442()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update443()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update444()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update445()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update446()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update447()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update448()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update449()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update450()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update451()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update452()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update453()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update454()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update455()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update456()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update457()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update458()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update459()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update460()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update461()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update462()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update463()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update464()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update465()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update466()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update467()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update468()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update469()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update470()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update471()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update472()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update473()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update474()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update475()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update476()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update477()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update478()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update479()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update480()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update481()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update482()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == true (line 1419)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update483()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == true (line 1413)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update484()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update485()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update486()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update487()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update488()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update489()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update490()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update491()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update492()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update493()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update494()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update495()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update496()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update497()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update498()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update499()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update500()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update501()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update502()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update503()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update504()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update505()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update506()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update507()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update508()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update509()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update510()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update511()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update512()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update513()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update514()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update515()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update516()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update517()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update518()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update519()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update520()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update521()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update522()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update523()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update524()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update525()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update526()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update527()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update528()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update529()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update530()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update531()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update532()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update533()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update534()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update535()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update536()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update537()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update538()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update539()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update540()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update541()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update542()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update543()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update544()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update545()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update546()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update547()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update548()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update549()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update550()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update551()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update552()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update553()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update554()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update555()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update556()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update557()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update558()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update559()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update560()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update561()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update562()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update563()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update564()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update565()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update566()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update567()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update568()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update569()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update570()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update571()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update572()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update573()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update574()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update575()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update576()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update577()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update578()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update579()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update580()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update581()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update582()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update583()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update584()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update585()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update586()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update587()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update588()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update589()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update590()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update591()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update592()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update593()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update594()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update595()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update596()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update597()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update598()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update599()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update600()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update601()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update602()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update603()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update604()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update605()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update606()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update607()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update608()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update609()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update610()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update611()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update612()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update613()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update614()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update615()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update616()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update617()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update618()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update619()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update620()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update621()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update622()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update623()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update624()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update625()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update626()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update627()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update628()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update629()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update630()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update631()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update632()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update633()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update634()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update635()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update636()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update637()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update638()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update639()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update640()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update641()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update642()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update643()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update644()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update645()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update646()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update647()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update648()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update649()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update650()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update651()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update652()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update653()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update654()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update655()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update656()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update657()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update658()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update659()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update660()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update661()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update662()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update663()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update664()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update665()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update666()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update667()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update668()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update669()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update670()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update671()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update672()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update673()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update674()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update675()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update676()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update677()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update678()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update679()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update680()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update681()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update682()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update683()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update684()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update685()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update686()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update687()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update688()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update689()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update690()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update691()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update692()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update693()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update694()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update695()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update696()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update697()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update698()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update699()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update700()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update701()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update702()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update703()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update704()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update705()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update706()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update707()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update708()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update709()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update710()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update711()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update712()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update713()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update714()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update715()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update716()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update717()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update718()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update719()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update720()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update721()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update722()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update723()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update724()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == true (line 1419)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update725()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == false (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == true (line 1413)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update726()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update727()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update728()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update729()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update730()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update731()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update732()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update733()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update734()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update735()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update736()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update737()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update738()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update739()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update740()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update741()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update742()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update743()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update744()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update745()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update746()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update747()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update748()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update749()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update750()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update751()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update752()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update753()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update754()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update755()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update756()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update757()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update758()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update759()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update760()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update761()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update762()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update763()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update764()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update765()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update766()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update767()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update768()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update769()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update770()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update771()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update772()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update773()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update774()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update775()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update776()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update777()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update778()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update779()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update780()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update781()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update782()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update783()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update784()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update785()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == false (line 1411)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update786()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update787()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update788()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update789()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update790()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update791()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update792()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update793()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update794()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update795()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update796()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update797()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update798()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update799()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update800()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update801()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update802()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update803()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update804()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update805()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update806()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update807()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update808()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update809()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update810()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update811()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update812()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update813()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update814()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update815()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update816()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update817()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update818()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update819()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update820()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update821()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update822()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update823()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update824()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update825()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update826()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update827()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update828()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update829()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update830()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update831()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update832()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update833()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update834()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update835()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update836()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update837()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update838()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update839()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update840()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update841()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update842()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update843()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update844()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update845()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update846()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update847()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update848()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update849()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update850()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update851()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update852()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update853()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update854()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update855()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update856()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update857()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update858()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update859()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update860()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update861()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update862()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update863()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update864()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update865()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update866()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update867()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update868()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update869()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update870()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update871()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update872()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update873()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update874()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update875()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update876()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update877()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update878()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update879()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update880()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update881()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update882()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update883()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update884()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update885()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update886()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update887()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update888()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update889()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update890()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update891()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update892()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update893()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update894()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update895()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update896()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update897()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update898()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update899()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update900()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update901()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update902()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update903()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update904()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update905()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == false (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update906()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update907()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update908()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update909()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update910()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update911()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update912()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update913()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update914()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update915()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update916()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update917()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update918()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update919()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update920()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update921()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update922()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update923()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update924()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update925()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update926()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update927()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update928()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update929()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update930()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update931()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update932()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update933()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update934()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update935()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update936()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update937()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update938()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update939()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update940()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update941()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update942()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update943()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update944()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update945()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == false (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update946()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update947()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update948()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update949()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update950()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update951()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update952()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update953()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update954()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update955()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update956()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update957()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update958()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update959()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == false (line 1455)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update960()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update961()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == false (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update962()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == false (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update963()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == false (line 1462)
    // if (\null !== $parsed_id['number']) == true (line 1470)
    // if ($form) == true (line 1487)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update964()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == false (line 1456)
    // if ($updated_option_name !== $option_name) == true (line 1462)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update965()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == false (line 1419)
    // if (!\is_null($parsed_id['number'])) == true (line 1424)
    // if ($name === $parsed_id['id_base'] && \is_callable($control['callback'])) == true (line 1440)
    // if (0 !== $this->count_captured_options()) == true (line 1455)
    // if ($this->count_captured_options() > 1) == true (line 1456)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update966()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == false (line 1413)
    // if (\is_null($instance)) == true (line 1419)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCall_widget_update967()
{
    $widget_id = m::mock('UntypedParameter_widget_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\did_action('customize_preview_init')) == true (line 1394)
    // if ($setting->id !== $setting_id) == true (line 1396)
    // if (!empty($_POST['sanitized_widget_setting'])) == true (line 1411)
    // if (\false === $sanitized_widget_setting) == true (line 1413)

    $actual = $this->wP_Customize_Widgets->call_widget_update($widget_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget2()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget3()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget4()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget5()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget6()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget7()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget8()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget9()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget10()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget11()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget12()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget13()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget14()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget15()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == false (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget16()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget17()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget18()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget19()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget20()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget21()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget22()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget23()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == false (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget24()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget25()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget26()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget27()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == false (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget28()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget29()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == false (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget30()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == false (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testWp_ajax_update_widget31()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_user_logged_in()) == true (line 1511)
    // if (!\current_user_can('edit_theme_options')) == true (line 1517)
    // if (empty($_POST['widget-id'])) == true (line 1521)
    // if ($is_updating_widget_template) == true (line 1545)
    // if (\is_wp_error($updated_widget)) == true (line 1550)

    $actual = $this->wP_Customize_Widgets->wp_ajax_update_widget();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_dynamic_partial_args0()
{
    $partial_args = m::mock('UntypedParameter_partial_args_');
    $partial_id = m::mock('UntypedParameter_partial_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 1574)
    // if (\preg_match('/^widget\\[(?P<widget_id>.+)\\]$/', $partial_id, $matches)) == false (line 1578)

    $actual = $this->wP_Customize_Widgets->customize_dynamic_partial_args($partial_args, $partial_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_dynamic_partial_args1()
{
    $partial_args = m::mock('UntypedParameter_partial_args_');
    $partial_id = m::mock('UntypedParameter_partial_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 1574)
    // if (\preg_match('/^widget\\[(?P<widget_id>.+)\\]$/', $partial_id, $matches)) == true (line 1578)
    // if (\false === $partial_args) == false (line 1579)

    $actual = $this->wP_Customize_Widgets->customize_dynamic_partial_args($partial_args, $partial_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_dynamic_partial_args2()
{
    $partial_args = m::mock('UntypedParameter_partial_args_');
    $partial_id = m::mock('UntypedParameter_partial_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 1574)
    // if (\preg_match('/^widget\\[(?P<widget_id>.+)\\]$/', $partial_id, $matches)) == true (line 1578)
    // if (\false === $partial_args) == true (line 1579)

    $actual = $this->wP_Customize_Widgets->customize_dynamic_partial_args($partial_args, $partial_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCustomize_dynamic_partial_args3()
{
    $partial_args = m::mock('UntypedParameter_partial_args_');
    $partial_id = m::mock('UntypedParameter_partial_id_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == true (line 1574)

    $actual = $this->wP_Customize_Widgets->customize_dynamic_partial_args($partial_args, $partial_id);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSelective_refresh_init0()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == false (line 1603)

    $actual = $this->wP_Customize_Widgets->selective_refresh_init();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSelective_refresh_init1()
{
    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\current_theme_supports('customize-selective-refresh-widgets')) == true (line 1603)

    $actual = $this->wP_Customize_Widgets->selective_refresh_init();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_dynamic_sidebar_params0()
{
    $params = m::mock('UntypedParameter_params_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$is_valid) == false (line 1647)
    // if (isset($this->context_sidebar_instance_number)) == false (line 1655)
    // if (isset($sidebar_args['id']) && isset($this->sidebar_instance_count[$sidebar_args['id']])) == false (line 1657)

    $actual = $this->wP_Customize_Widgets->filter_dynamic_sidebar_params($params);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_dynamic_sidebar_params1()
{
    $params = m::mock('UntypedParameter_params_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$is_valid) == false (line 1647)
    // if (isset($this->context_sidebar_instance_number)) == false (line 1655)
    // if (isset($sidebar_args['id']) && isset($this->sidebar_instance_count[$sidebar_args['id']])) == true (line 1657)

    $actual = $this->wP_Customize_Widgets->filter_dynamic_sidebar_params($params);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_dynamic_sidebar_params2()
{
    $params = m::mock('UntypedParameter_params_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$is_valid) == false (line 1647)
    // if (isset($this->context_sidebar_instance_number)) == true (line 1655)

    $actual = $this->wP_Customize_Widgets->filter_dynamic_sidebar_params($params);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_dynamic_sidebar_params3()
{
    $params = m::mock('UntypedParameter_params_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$is_valid) == true (line 1647)

    $actual = $this->wP_Customize_Widgets->filter_dynamic_sidebar_params($params);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_wp_kses_allowed_data_attributes0()
{
    $allowed_html = m::mock('UntypedParameter_allowed_html_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->filter_wp_kses_allowed_data_attributes($allowed_html);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_wp_kses_allowed_data_attributes1()
{
    $allowed_html = m::mock('UntypedParameter_allowed_html_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($allowed_html[$tag_name])) == false (line 1694)

    $actual = $this->wP_Customize_Widgets->filter_wp_kses_allowed_data_attributes($allowed_html);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_wp_kses_allowed_data_attributes2()
{
    $allowed_html = m::mock('UntypedParameter_allowed_html_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($allowed_html[$tag_name])) == true (line 1694)

    $actual = $this->wP_Customize_Widgets->filter_wp_kses_allowed_data_attributes($allowed_html);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testStart_dynamic_sidebar0()
{
    $index = m::mock('UntypedParameter_index_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($this->sidebar_instance_count[$index])) == false (line 1750)
    // if (!$this->manager->selective_refresh->is_render_partials_request()) == false (line 1754)

    $actual = $this->wP_Customize_Widgets->start_dynamic_sidebar($index);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testStart_dynamic_sidebar1()
{
    $index = m::mock('UntypedParameter_index_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($this->sidebar_instance_count[$index])) == false (line 1750)
    // if (!$this->manager->selective_refresh->is_render_partials_request()) == true (line 1754)

    $actual = $this->wP_Customize_Widgets->start_dynamic_sidebar($index);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testStart_dynamic_sidebar2()
{
    $index = m::mock('UntypedParameter_index_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($this->sidebar_instance_count[$index])) == true (line 1750)
    // if (!$this->manager->selective_refresh->is_render_partials_request()) == false (line 1754)

    $actual = $this->wP_Customize_Widgets->start_dynamic_sidebar($index);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testStart_dynamic_sidebar3()
{
    $index = m::mock('UntypedParameter_index_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($this->sidebar_instance_count[$index])) == true (line 1750)
    // if (!$this->manager->selective_refresh->is_render_partials_request()) == true (line 1754)

    $actual = $this->wP_Customize_Widgets->start_dynamic_sidebar($index);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnd_dynamic_sidebar0()
{
    $index = m::mock('UntypedParameter_index_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->selective_refresh->is_render_partials_request()) == false (line 1770)

    $actual = $this->wP_Customize_Widgets->end_dynamic_sidebar($index);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testEnd_dynamic_sidebar1()
{
    $index = m::mock('UntypedParameter_index_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!$this->manager->selective_refresh->is_render_partials_request()) == true (line 1770)

    $actual = $this->wP_Customize_Widgets->end_dynamic_sidebar($index);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFilter_sidebars_widgets_for_rendering_widget0()
{
    $sidebars_widgets = m::mock('UntypedParameter_sidebars_widgets_');

    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->filter_sidebars_widgets_for_rendering_widget($sidebars_widgets);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRender_widget_partial0()
{
    $partial = m::mock('UntypedParameter_partial_');
    $context = m::mock('UntypedParameter_context_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_array($context) || empty($context['sidebar_id']) || !\is_registered_sidebar($context['sidebar_id'])) == false (line 1824)
    // if (isset($context['sidebar_instance_number'])) == false (line 1833)

    $actual = $this->wP_Customize_Widgets->render_widget_partial($partial, $context);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRender_widget_partial1()
{
    $partial = m::mock('UntypedParameter_partial_');
    $context = m::mock('UntypedParameter_context_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_array($context) || empty($context['sidebar_id']) || !\is_registered_sidebar($context['sidebar_id'])) == false (line 1824)
    // if (isset($context['sidebar_instance_number'])) == true (line 1833)

    $actual = $this->wP_Customize_Widgets->render_widget_partial($partial, $context);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRender_widget_partial2()
{
    $partial = m::mock('UntypedParameter_partial_');
    $context = m::mock('UntypedParameter_context_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_array($context) || empty($context['sidebar_id']) || !\is_registered_sidebar($context['sidebar_id'])) == true (line 1824)

    $actual = $this->wP_Customize_Widgets->render_widget_partial($partial, $context);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCapture_filter_pre_update_option0()
{
    $new_value = m::mock('UntypedParameter_new_value_');
    $option_name = m::mock('UntypedParameter_option_name_');
    $old_value = m::mock('UntypedParameter_old_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->is_option_capture_ignored($option_name)) == false (line 1956)
    // if (!isset($this->_captured_options[$option_name])) == false (line 1960)

    $actual = $this->wP_Customize_Widgets->capture_filter_pre_update_option($new_value, $option_name, $old_value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCapture_filter_pre_update_option1()
{
    $new_value = m::mock('UntypedParameter_new_value_');
    $option_name = m::mock('UntypedParameter_option_name_');
    $old_value = m::mock('UntypedParameter_old_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->is_option_capture_ignored($option_name)) == false (line 1956)
    // if (!isset($this->_captured_options[$option_name])) == true (line 1960)

    $actual = $this->wP_Customize_Widgets->capture_filter_pre_update_option($new_value, $option_name, $old_value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCapture_filter_pre_update_option2()
{
    $new_value = m::mock('UntypedParameter_new_value_');
    $option_name = m::mock('UntypedParameter_option_name_');
    $old_value = m::mock('UntypedParameter_old_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($this->is_option_capture_ignored($option_name)) == true (line 1956)

    $actual = $this->wP_Customize_Widgets->capture_filter_pre_update_option($new_value, $option_name, $old_value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCapture_filter_pre_get_option0()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_captured_options[$option_name])) == false (line 1980)

    $actual = $this->wP_Customize_Widgets->capture_filter_pre_get_option($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testCapture_filter_pre_get_option1()
{
    $value = m::mock('UntypedParameter_value_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_captured_options[$option_name])) == true (line 1980)

    $actual = $this->wP_Customize_Widgets->capture_filter_pre_get_option($value);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testSetup_widget_addition_previews0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->setup_widget_addition_previews();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPrepreview_added_sidebars_widgets0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->prepreview_added_sidebars_widgets();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testPrepreview_added_widget_instance0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->prepreview_added_widget_instance();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_prepreview_filters0()
{
    // TODO: Your mock expectations here

    $actual = $this->wP_Customize_Widgets->remove_prepreview_filters();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}
}
