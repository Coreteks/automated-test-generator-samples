<?php

namespace tests\Illuminate\Translation;

use Illuminate\Translation\MessageSelector;
use Mockery as m;

class MessageSelectorTest extends \PHPUnit_Framework_TestCase
{
/**
* @var \Illuminate\Translation\MessageSelector
*/
protected $messageSelector;

public function setUp()
{
    parent::setUp();

    $this->messageSelector = new \Illuminate\Translation\MessageSelector();
}

public function testChoose0()
{
    $line = m::mock('UntypedParameter_line_');
    $number = m::mock('UntypedParameter_number_');
    $locale = m::mock('UntypedParameter_locale_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($value = $this->extract($segments, $number)) !== null) == false (line 21)
    // if (count($segments) == 1 || !isset($segments[$pluralIndex])) == false (line 29)

    $actual = $this->messageSelector->choose($line, $number, $locale);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testChoose1()
{
    $line = m::mock('UntypedParameter_line_');
    $number = m::mock('UntypedParameter_number_');
    $locale = m::mock('UntypedParameter_locale_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($value = $this->extract($segments, $number)) !== null) == false (line 21)
    // if (count($segments) == 1 || !isset($segments[$pluralIndex])) == true (line 29)

    $actual = $this->messageSelector->choose($line, $number, $locale);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testChoose2()
{
    $line = m::mock('UntypedParameter_line_');
    $number = m::mock('UntypedParameter_number_');
    $locale = m::mock('UntypedParameter_locale_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (($value = $this->extract($segments, $number)) !== null) == true (line 21)

    $actual = $this->messageSelector->choose($line, $number, $locale);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex0()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == false (line 401)
    // Case 'ar_SD' == false (line 402)
    // Case 'ar_SS' == false (line 403)
    // Case 'ar_SY' == false (line 404)
    // Case 'ar_TN' == false (line 405)
    // Case 'ar_YE' == false (line 406)
    // Default (line 408)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex1()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == false (line 401)
    // Case 'ar_SD' == false (line 402)
    // Case 'ar_SS' == false (line 403)
    // Case 'ar_SY' == false (line 404)
    // Case 'ar_TN' == false (line 405)
    // Case 'ar_YE' == true (line 406)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex2()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == false (line 401)
    // Case 'ar_SD' == false (line 402)
    // Case 'ar_SS' == false (line 403)
    // Case 'ar_SY' == false (line 404)
    // Case 'ar_TN' == true (line 405)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex3()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == false (line 401)
    // Case 'ar_SD' == false (line 402)
    // Case 'ar_SS' == false (line 403)
    // Case 'ar_SY' == true (line 404)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex4()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == false (line 401)
    // Case 'ar_SD' == false (line 402)
    // Case 'ar_SS' == true (line 403)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex5()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == false (line 401)
    // Case 'ar_SD' == true (line 402)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex6()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == false (line 400)
    // Case 'ar_SA' == true (line 401)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex7()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == false (line 399)
    // Case 'ar_QA' == true (line 400)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex8()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == false (line 398)
    // Case 'ar_OM' == true (line 399)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex9()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == false (line 397)
    // Case 'ar_MA' == true (line 398)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex10()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == false (line 396)
    // Case 'ar_LY' == true (line 397)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex11()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == false (line 395)
    // Case 'ar_LB' == true (line 396)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex12()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == false (line 394)
    // Case 'ar_KW' == true (line 395)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex13()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == false (line 393)
    // Case 'ar_JO' == true (line 394)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex14()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == false (line 392)
    // Case 'ar_IQ' == true (line 393)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex15()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == false (line 391)
    // Case 'ar_IN' == true (line 392)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex16()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == false (line 390)
    // Case 'ar_EG' == true (line 391)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex17()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == false (line 389)
    // Case 'ar_DZ' == true (line 390)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex18()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == false (line 388)
    // Case 'ar_BH' == true (line 389)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex19()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == false (line 387)
    // Case 'ar_AE' == true (line 388)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex20()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == false (line 385)
    // Case 'ar' == true (line 387)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex21()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == false (line 384)
    // Case 'ro_RO' == true (line 385)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex22()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == false (line 382)
    // Case 'ro' == true (line 384)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex23()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == false (line 381)
    // Case 'cy_GB' == true (line 382)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex24()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == false (line 379)
    // Case 'cy' == true (line 381)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex25()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == false (line 378)
    // Case 'pl_PL' == true (line 379)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex26()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == false (line 376)
    // Case 'pl' == true (line 378)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex27()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == false (line 375)
    // Case 'lv_LV' == true (line 376)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex28()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == false (line 373)
    // Case 'lv' == true (line 375)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex29()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == false (line 372)
    // Case 'mt_MT' == true (line 373)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex30()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == false (line 370)
    // Case 'mt' == true (line 372)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex31()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == false (line 369)
    // Case 'mk_MK' == true (line 370)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex32()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == false (line 367)
    // Case 'mk' == true (line 369)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex33()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == false (line 366)
    // Case 'sl_SI' == true (line 367)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex34()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == false (line 364)
    // Case 'sl' == true (line 366)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex35()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == false (line 363)
    // Case 'lt_LT' == true (line 364)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex36()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == false (line 361)
    // Case 'lt' == true (line 363)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex37()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == false (line 360)
    // Case 'ga_IE' == true (line 361)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex38()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == false (line 358)
    // Case 'ga' == true (line 360)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex39()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == false (line 357)
    // Case 'sk_SK' == true (line 358)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex40()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == false (line 356)
    // Case 'sk' == true (line 357)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex41()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == false (line 355)
    // Case 'cs_CZ' == true (line 356)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex42()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == false (line 353)
    // Case 'cs' == true (line 355)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex43()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == false (line 352)
    // Case 'uk_UA' == true (line 353)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex44()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == false (line 351)
    // Case 'uk' == true (line 352)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex45()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == false (line 350)
    // Case 'sr_RS' == true (line 351)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex46()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == false (line 349)
    // Case 'sr_ME' == true (line 350)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex47()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == false (line 348)
    // Case 'sr' == true (line 349)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex48()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == false (line 347)
    // Case 'ru_UA' == true (line 348)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex49()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == false (line 346)
    // Case 'ru_RU' == true (line 347)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex50()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == false (line 345)
    // Case 'ru' == true (line 346)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex51()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == false (line 344)
    // Case 'hr_HR' == true (line 345)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex52()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == false (line 343)
    // Case 'hr' == true (line 344)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex53()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == false (line 342)
    // Case 'bs_BA' == true (line 343)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex54()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == false (line 341)
    // Case 'bs' == true (line 342)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex55()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == false (line 340)
    // Case 'be_BY' == true (line 341)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex56()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == false (line 338)
    // Case 'be' == true (line 340)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex57()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == false (line 337)
    // Case 'xbr' == true (line 338)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex58()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == false (line 336)
    // Case 'wa_BE' == true (line 337)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex59()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == false (line 335)
    // Case 'wa' == true (line 336)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex60()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == false (line 334)
    // Case 'ti_ET' == true (line 335)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex61()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == false (line 333)
    // Case 'ti_ER' == true (line 334)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex62()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == false (line 332)
    // Case 'ti' == true (line 333)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex63()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == false (line 331)
    // Case 'nso_ZA' == true (line 332)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex64()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == false (line 330)
    // Case 'nso' == true (line 331)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex65()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == false (line 329)
    // Case 'mg_MG' == true (line 330)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex66()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == false (line 328)
    // Case 'mg' == true (line 329)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex67()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == false (line 327)
    // Case 'ln_CD' == true (line 328)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex68()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == false (line 326)
    // Case 'ln' == true (line 327)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex69()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == false (line 325)
    // Case 'hy_AM' == true (line 326)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex70()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == false (line 324)
    // Case 'hy' == true (line 325)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex71()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == false (line 323)
    // Case 'hi_IN' == true (line 324)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex72()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == false (line 322)
    // Case 'hi' == true (line 323)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex73()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == false (line 321)
    // Case 'gun' == true (line 322)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex74()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == false (line 320)
    // Case 'fr_LU' == true (line 321)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex75()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == false (line 319)
    // Case 'fr_FR' == true (line 320)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex76()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == false (line 318)
    // Case 'fr_CH' == true (line 319)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex77()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == false (line 317)
    // Case 'fr_CA' == true (line 318)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex78()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == false (line 316)
    // Case 'fr_BE' == true (line 317)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex79()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == false (line 315)
    // Case 'fr' == true (line 316)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex80()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == false (line 314)
    // Case 'fil_PH' == true (line 315)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex81()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == false (line 313)
    // Case 'fil' == true (line 314)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex82()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == false (line 312)
    // Case 'bh' == true (line 313)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex83()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == false (line 311)
    // Case 'am_ET' == true (line 312)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex84()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == false (line 309)
    // Case 'am' == true (line 311)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex85()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == false (line 308)
    // Case 'zu_ZA' == true (line 309)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex86()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == false (line 307)
    // Case 'zu' == true (line 308)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex87()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == false (line 306)
    // Case 'ur_PK' == true (line 307)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex88()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == false (line 305)
    // Case 'ur_IN' == true (line 306)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex89()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == false (line 304)
    // Case 'ur' == true (line 305)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex90()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == false (line 303)
    // Case 'tk_TM' == true (line 304)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex91()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == false (line 302)
    // Case 'tk' == true (line 303)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex92()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == false (line 301)
    // Case 'te_IN' == true (line 302)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex93()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == false (line 300)
    // Case 'te' == true (line 301)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex94()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == false (line 299)
    // Case 'ta_LK' == true (line 300)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex95()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == false (line 298)
    // Case 'ta_IN' == true (line 299)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex96()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == false (line 297)
    // Case 'ta' == true (line 298)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex97()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == false (line 296)
    // Case 'sw_TZ' == true (line 297)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex98()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == false (line 295)
    // Case 'sw_KE' == true (line 296)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex99()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == false (line 294)
    // Case 'sw' == true (line 295)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex100()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == false (line 293)
    // Case 'sv_SE' == true (line 294)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex101()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == false (line 292)
    // Case 'sv_FI' == true (line 293)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex102()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == false (line 291)
    // Case 'sv' == true (line 292)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex103()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == false (line 290)
    // Case 'sq_MK' == true (line 291)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex104()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == false (line 289)
    // Case 'sq_AL' == true (line 290)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex105()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == false (line 288)
    // Case 'sq' == true (line 289)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex106()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == false (line 287)
    // Case 'so_SO' == true (line 288)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex107()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == false (line 286)
    // Case 'so_KE' == true (line 287)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex108()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == false (line 285)
    // Case 'so_ET' == true (line 286)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex109()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == false (line 284)
    // Case 'so_DJ' == true (line 285)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex110()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == false (line 283)
    // Case 'so' == true (line 284)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex111()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == false (line 282)
    // Case 'pt_PT' == true (line 283)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex112()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == false (line 281)
    // Case 'pt_BR' == true (line 282)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex113()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == false (line 280)
    // Case 'pt' == true (line 281)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex114()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == false (line 279)
    // Case 'ps_AF' == true (line 280)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex115()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == false (line 278)
    // Case 'ps' == true (line 279)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex116()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == false (line 277)
    // Case 'pap_CW' == true (line 278)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex117()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == false (line 276)
    // Case 'pap_AW' == true (line 277)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex118()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == false (line 275)
    // Case 'pap_AN' == true (line 276)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex119()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == false (line 274)
    // Case 'pap' == true (line 275)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex120()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == false (line 273)
    // Case 'pa_PK' == true (line 274)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex121()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == false (line 272)
    // Case 'pa_IN' == true (line 273)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex122()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == false (line 271)
    // Case 'pa' == true (line 272)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex123()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == false (line 270)
    // Case 'or_IN' == true (line 271)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex124()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == false (line 269)
    // Case 'or' == true (line 270)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex125()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == false (line 268)
    // Case 'om_KE' == true (line 269)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex126()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == false (line 267)
    // Case 'om_ET' == true (line 268)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex127()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == false (line 266)
    // Case 'om' == true (line 267)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex128()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == false (line 265)
    // Case 'no' == true (line 266)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex129()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == false (line 264)
    // Case 'nn_NO' == true (line 265)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex130()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == false (line 263)
    // Case 'nn' == true (line 264)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex131()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == false (line 262)
    // Case 'nl_NL' == true (line 263)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex132()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == false (line 261)
    // Case 'nl_BE' == true (line 262)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex133()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == false (line 260)
    // Case 'nl_AW' == true (line 261)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex134()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == false (line 259)
    // Case 'nl' == true (line 260)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex135()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == false (line 258)
    // Case 'ne_NP' == true (line 259)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex136()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == false (line 257)
    // Case 'ne' == true (line 258)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex137()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == false (line 256)
    // Case 'nb_NO' == true (line 257)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex138()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == false (line 255)
    // Case 'nb' == true (line 256)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex139()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == false (line 254)
    // Case 'nah' == true (line 255)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex140()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == false (line 253)
    // Case 'mr_IN' == true (line 254)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex141()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == false (line 252)
    // Case 'mr' == true (line 253)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex142()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == false (line 251)
    // Case 'mn_MN' == true (line 252)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex143()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == false (line 250)
    // Case 'mn' == true (line 251)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex144()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == false (line 249)
    // Case 'ml_IN' == true (line 250)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex145()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == false (line 248)
    // Case 'ml' == true (line 249)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex146()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == false (line 247)
    // Case 'lb_LU' == true (line 248)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex147()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == false (line 246)
    // Case 'lb' == true (line 247)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex148()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == false (line 245)
    // Case 'ku_TR' == true (line 246)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex149()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == false (line 244)
    // Case 'ku' == true (line 245)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex150()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == false (line 243)
    // Case 'it_IT' == true (line 244)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex151()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == false (line 242)
    // Case 'it_CH' == true (line 243)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex152()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == false (line 241)
    // Case 'it' == true (line 242)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex153()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == false (line 240)
    // Case 'is_IS' == true (line 241)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex154()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == false (line 239)
    // Case 'is' == true (line 240)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex155()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == false (line 238)
    // Case 'hu_HU' == true (line 239)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex156()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == false (line 237)
    // Case 'hu' == true (line 238)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex157()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == false (line 236)
    // Case 'he_IL' == true (line 237)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex158()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == false (line 235)
    // Case 'he' == true (line 236)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex159()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == false (line 234)
    // Case 'ha_NG' == true (line 235)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex160()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == false (line 233)
    // Case 'ha' == true (line 234)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex161()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == false (line 232)
    // Case 'gu_IN' == true (line 233)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex162()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == false (line 231)
    // Case 'gu' == true (line 232)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex163()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == false (line 230)
    // Case 'gl_ES' == true (line 231)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex164()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == false (line 229)
    // Case 'gl' == true (line 230)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex165()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == false (line 228)
    // Case 'fy_NL' == true (line 229)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex166()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == false (line 227)
    // Case 'fy_DE' == true (line 228)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex167()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == false (line 226)
    // Case 'fy' == true (line 227)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex168()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == false (line 225)
    // Case 'fur_IT' == true (line 226)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex169()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == false (line 224)
    // Case 'fur' == true (line 225)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex170()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == false (line 223)
    // Case 'fo_FO' == true (line 224)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex171()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == false (line 222)
    // Case 'fo' == true (line 223)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex172()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == false (line 221)
    // Case 'fi_FI' == true (line 222)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex173()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == false (line 220)
    // Case 'fi' == true (line 221)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex174()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == false (line 219)
    // Case 'fa_IR' == true (line 220)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex175()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == false (line 218)
    // Case 'fa' == true (line 219)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex176()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == false (line 217)
    // Case 'eu_FR' == true (line 218)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex177()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == false (line 216)
    // Case 'eu_ES' == true (line 217)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex178()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == false (line 215)
    // Case 'eu' == true (line 216)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex179()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == false (line 214)
    // Case 'et_EE' == true (line 215)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex180()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == false (line 213)
    // Case 'et' == true (line 214)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex181()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == false (line 212)
    // Case 'es_VE' == true (line 213)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex182()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == false (line 211)
    // Case 'es_UY' == true (line 212)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex183()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == false (line 210)
    // Case 'es_US' == true (line 211)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex184()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == false (line 209)
    // Case 'es_SV' == true (line 210)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex185()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == false (line 208)
    // Case 'es_PY' == true (line 209)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex186()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == false (line 207)
    // Case 'es_PR' == true (line 208)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex187()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == false (line 206)
    // Case 'es_PE' == true (line 207)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex188()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == false (line 205)
    // Case 'es_PA' == true (line 206)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex189()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == false (line 204)
    // Case 'es_NI' == true (line 205)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex190()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == false (line 203)
    // Case 'es_MX' == true (line 204)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex191()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == false (line 202)
    // Case 'es_HN' == true (line 203)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex192()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == false (line 201)
    // Case 'es_GT' == true (line 202)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex193()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == false (line 200)
    // Case 'es_ES' == true (line 201)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex194()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == false (line 199)
    // Case 'es_EC' == true (line 200)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex195()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == false (line 198)
    // Case 'es_DO' == true (line 199)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex196()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == false (line 197)
    // Case 'es_CU' == true (line 198)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex197()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == false (line 196)
    // Case 'es_CR' == true (line 197)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex198()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == false (line 195)
    // Case 'es_CO' == true (line 196)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex199()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == false (line 194)
    // Case 'es_CL' == true (line 195)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex200()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == false (line 193)
    // Case 'es_BO' == true (line 194)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex201()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == false (line 192)
    // Case 'es_AR' == true (line 193)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex202()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == false (line 191)
    // Case 'es' == true (line 192)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex203()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == false (line 190)
    // Case 'eo_US' == true (line 191)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex204()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == false (line 189)
    // Case 'eo' == true (line 190)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex205()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == false (line 188)
    // Case 'en_ZW' == true (line 189)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex206()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == false (line 187)
    // Case 'en_ZM' == true (line 188)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex207()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == false (line 186)
    // Case 'en_ZA' == true (line 187)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex208()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == false (line 185)
    // Case 'en_US' == true (line 186)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex209()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == false (line 184)
    // Case 'en_SG' == true (line 185)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex210()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == false (line 183)
    // Case 'en_PH' == true (line 184)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex211()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == false (line 182)
    // Case 'en_NZ' == true (line 183)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex212()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == false (line 181)
    // Case 'en_NG' == true (line 182)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex213()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == false (line 180)
    // Case 'en_IN' == true (line 181)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex214()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == false (line 179)
    // Case 'en_IE' == true (line 180)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex215()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == false (line 178)
    // Case 'en_HK' == true (line 179)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex216()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == false (line 177)
    // Case 'en_GB' == true (line 178)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex217()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == false (line 176)
    // Case 'en_DK' == true (line 177)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex218()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == false (line 175)
    // Case 'en_CA' == true (line 176)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex219()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == false (line 174)
    // Case 'en_BW' == true (line 175)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex220()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == false (line 173)
    // Case 'en_AU' == true (line 174)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex221()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == false (line 172)
    // Case 'en_AG' == true (line 173)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex222()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == false (line 171)
    // Case 'en' == true (line 172)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex223()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == false (line 170)
    // Case 'el_GR' == true (line 171)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex224()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == false (line 169)
    // Case 'el_CY' == true (line 170)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex225()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == false (line 168)
    // Case 'el' == true (line 169)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex226()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == false (line 167)
    // Case 'de_LU' == true (line 168)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex227()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == false (line 166)
    // Case 'de_LI' == true (line 167)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex228()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == false (line 165)
    // Case 'de_DE' == true (line 166)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex229()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == false (line 164)
    // Case 'de_CH' == true (line 165)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex230()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == false (line 163)
    // Case 'de_BE' == true (line 164)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex231()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == false (line 162)
    // Case 'de_AT' == true (line 163)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex232()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == false (line 161)
    // Case 'de' == true (line 162)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex233()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == false (line 160)
    // Case 'da_DK' == true (line 161)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex234()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == false (line 159)
    // Case 'da' == true (line 160)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex235()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == false (line 158)
    // Case 'ca_IT' == true (line 159)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex236()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == false (line 157)
    // Case 'ca_FR' == true (line 158)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex237()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == false (line 156)
    // Case 'ca_ES' == true (line 157)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex238()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == false (line 155)
    // Case 'ca_AD' == true (line 156)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex239()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == false (line 154)
    // Case 'ca' == true (line 155)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex240()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == false (line 153)
    // Case 'bg_BG' == true (line 154)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex241()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == false (line 152)
    // Case 'bg' == true (line 153)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex242()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == false (line 151)
    // Case 'bn_IN' == true (line 152)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex243()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == false (line 150)
    // Case 'bn_BD' == true (line 151)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex244()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == false (line 149)
    // Case 'bn' == true (line 150)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex245()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == false (line 148)
    // Case 'af_ZA' == true (line 149)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex246()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == false (line 146)
    // Case 'af' == true (line 148)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex247()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == false (line 145)
    // Case 'zh_TW' == true (line 146)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex248()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == false (line 144)
    // Case 'zh_SG' == true (line 145)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex249()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == false (line 143)
    // Case 'zh_HK' == true (line 144)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex250()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == false (line 142)
    // Case 'zh_CN' == true (line 143)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex251()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == false (line 141)
    // Case 'zh' == true (line 142)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex252()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == false (line 140)
    // Case 'vi_VN' == true (line 141)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex253()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == false (line 139)
    // Case 'vi' == true (line 140)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex254()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == false (line 138)
    // Case 'tr_TR' == true (line 139)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex255()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == false (line 137)
    // Case 'tr_CY' == true (line 138)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex256()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == false (line 136)
    // Case 'tr' == true (line 137)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex257()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == false (line 135)
    // Case 'th_TH' == true (line 136)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex258()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == false (line 134)
    // Case 'th' == true (line 135)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex259()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == false (line 133)
    // Case 'ms_MY' == true (line 134)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex260()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == false (line 132)
    // Case 'ms' == true (line 133)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex261()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == false (line 131)
    // Case 'ko_KR' == true (line 132)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex262()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == false (line 130)
    // Case 'ko' == true (line 131)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex263()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == false (line 129)
    // Case 'kn_IN' == true (line 130)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex264()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == false (line 128)
    // Case 'kn' == true (line 129)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex265()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == false (line 127)
    // Case 'km_KH' == true (line 128)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex266()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == false (line 126)
    // Case 'km' == true (line 127)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex267()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == false (line 125)
    // Case 'ka_GE' == true (line 126)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex268()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == false (line 124)
    // Case 'ka' == true (line 125)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex269()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == false (line 123)
    // Case 'jv' == true (line 124)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex270()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == false (line 122)
    // Case 'ja_JP' == true (line 123)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex271()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == false (line 121)
    // Case 'ja' == true (line 122)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex272()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == false (line 120)
    // Case 'id_ID' == true (line 121)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex273()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == false (line 119)
    // Case 'id' == true (line 120)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex274()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == false (line 118)
    // Case 'dz_BT' == true (line 119)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex275()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == false (line 117)
    // Case 'dz' == true (line 118)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex276()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == false (line 116)
    // Case 'bo_IN' == true (line 117)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex277()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == false (line 115)
    // Case 'bo_CN' == true (line 116)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex278()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == false (line 114)
    // Case 'bo' == true (line 115)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex279()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == false (line 113)
    // Case 'az_AZ' == true (line 114)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGetPluralIndex280()
{
    $locale = m::mock('UntypedParameter_locale_');
    $number = m::mock('UntypedParameter_number_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // switch ($locale) (line 112)
    // Case 'az' == true (line 113)

    $actual = $this->messageSelector->getPluralIndex($locale, $number);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}
}
