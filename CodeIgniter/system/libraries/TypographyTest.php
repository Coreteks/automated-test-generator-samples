<?php

namespace tests;

use CI_Typography;
use Mockery as m;

class CI_TypographyTest extends \PHPUnit_Framework_TestCase
{
/**
* @var \CI_Typography
*/
protected $cI_Typography;

public function setUp()
{
    parent::setUp();

    $this->cI_Typography = new \CI_Typography();
}

public function testAuto_typography0()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography4()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography5()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography6()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography7()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography8()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography9()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography10()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography11()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography12()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography13()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography14()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography15()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography16()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography17()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography18()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography19()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography20()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography21()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography22()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography23()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography24()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography25()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography26()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography27()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography28()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography29()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography30()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography31()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography32()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography33()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography34()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography35()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography36()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography37()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography38()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography39()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography40()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography41()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography42()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography43()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography44()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography45()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography46()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography47()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography48()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography49()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography50()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography51()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography52()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography53()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography54()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography55()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography56()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography57()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography58()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography59()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography60()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography61()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography62()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography63()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography64()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography65()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography66()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography67()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography68()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography69()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography70()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography71()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography72()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography73()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography74()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography75()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography76()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography77()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography78()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography79()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography80()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography81()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography82()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography83()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography84()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography85()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography86()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography87()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography88()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography89()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography90()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography91()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography92()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography93()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography94()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography95()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography96()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography97()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography98()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography99()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography100()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography101()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography102()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography103()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography104()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography105()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography106()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography107()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography108()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography109()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography110()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography111()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography112()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography113()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography114()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography115()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography116()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography117()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography118()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography119()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography120()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography121()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography122()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography123()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography124()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography125()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography126()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography127()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography128()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography129()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography130()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography131()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography132()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography133()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography134()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography135()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography136()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography137()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography138()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography139()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography140()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography141()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography142()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography143()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography144()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography145()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography146()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography147()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography148()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography149()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography150()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography151()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography152()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography153()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography154()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography155()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography156()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography157()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography158()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography159()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography160()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography161()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography162()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography163()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography164()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography165()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography166()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography167()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography168()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography169()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography170()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography171()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography172()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography173()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography174()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography175()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography176()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography177()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography178()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography179()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography180()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography181()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography182()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography183()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography184()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography185()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography186()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography187()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography188()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography189()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography190()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography191()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography192()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography193()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography194()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography195()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography196()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography197()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography198()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography199()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography200()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography201()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography202()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography203()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography204()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography205()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography206()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography207()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography208()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography209()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography210()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography211()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography212()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography213()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography214()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography215()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography216()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography217()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography218()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography219()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography220()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography221()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography222()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography223()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography224()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography225()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography226()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography227()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography228()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography229()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography230()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography231()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography232()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography233()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography234()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography235()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography236()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography237()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography238()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography239()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography240()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography241()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography242()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography243()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography244()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography245()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography246()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography247()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography248()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography249()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography250()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography251()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography252()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography253()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography254()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography255()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography256()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography257()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography258()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography259()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography260()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography261()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography262()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography263()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography264()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography265()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography266()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography267()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography268()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography269()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography270()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography271()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography272()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography273()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography274()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography275()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography276()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography277()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography278()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography279()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography280()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography281()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography282()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography283()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography284()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography285()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography286()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography287()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography288()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography289()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography290()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography291()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography292()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography293()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography294()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography295()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography296()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography297()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography298()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography299()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography300()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography301()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography302()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography303()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography304()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography305()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography306()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography307()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography308()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography309()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography310()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography311()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography312()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography313()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography314()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography315()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography316()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography317()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography318()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography319()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography320()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography321()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography322()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography323()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography324()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography325()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography326()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography327()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography328()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography329()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography330()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography331()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography332()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography333()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography334()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography335()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography336()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography337()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography338()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography339()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography340()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography341()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography342()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography343()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography344()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography345()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography346()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography347()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography348()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography349()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography350()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography351()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography352()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography353()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography354()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography355()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography356()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography357()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography358()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography359()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography360()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography361()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography362()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography363()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography364()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography365()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography366()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography367()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography368()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography369()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography370()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography371()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography372()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography373()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography374()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography375()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography376()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography377()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography378()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography379()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography380()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography381()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography382()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography383()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography384()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography385()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography386()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography387()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography388()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography389()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography390()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography391()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography392()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography393()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography394()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography395()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography396()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography397()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography398()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography399()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography400()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography401()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography402()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography403()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography404()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography405()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography406()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography407()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography408()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography409()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography410()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography411()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography412()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography413()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography414()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography415()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography416()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography417()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography418()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography419()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography420()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography421()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography422()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography423()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography424()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography425()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography426()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography427()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography428()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography429()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography430()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography431()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography432()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography433()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography434()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography435()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography436()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography437()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography438()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography439()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography440()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography441()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography442()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography443()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography444()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography445()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography446()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography447()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography448()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography449()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography450()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography451()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography452()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography453()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography454()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography455()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography456()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography457()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography458()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography459()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography460()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography461()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography462()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography463()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography464()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography465()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography466()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography467()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography468()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography469()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography470()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography471()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography472()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography473()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography474()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography475()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography476()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography477()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography478()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography479()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography480()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography481()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography482()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography483()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography484()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography485()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography486()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography487()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography488()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography489()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography490()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography491()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography492()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography493()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography494()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography495()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography496()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography497()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography498()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography499()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography500()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography501()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography502()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography503()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography504()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography505()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography506()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography507()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography508()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography509()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography510()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography511()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography512()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography513()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography514()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography515()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography516()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography517()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography518()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography519()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography520()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography521()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography522()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography523()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography524()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography525()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography526()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography527()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography528()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography529()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography530()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography531()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography532()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography533()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography534()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography535()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography536()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography537()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography538()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography539()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography540()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography541()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography542()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography543()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography544()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography545()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography546()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography547()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography548()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography549()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography550()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography551()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography552()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography553()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography554()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography555()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography556()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography557()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography558()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography559()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography560()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography561()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography562()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography563()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography564()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography565()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography566()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography567()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography568()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography569()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography570()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography571()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography572()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography573()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography574()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography575()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography576()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography577()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography578()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography579()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography580()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography581()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography582()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography583()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography584()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography585()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography586()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography587()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography588()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography589()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography590()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography591()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography592()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography593()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography594()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography595()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography596()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography597()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography598()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography599()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography600()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography601()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography602()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography603()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography604()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography605()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography606()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography607()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography608()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography609()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography610()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography611()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography612()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography613()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography614()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography615()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography616()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography617()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography618()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography619()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography620()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography621()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography622()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography623()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography624()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography625()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography626()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography627()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography628()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography629()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography630()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography631()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography632()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography633()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography634()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography635()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography636()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography637()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography638()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography639()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography640()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography641()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography642()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography643()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography644()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography645()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography646()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography647()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography648()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography649()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography650()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography651()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography652()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography653()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography654()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography655()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography656()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography657()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography658()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography659()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography660()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography661()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography662()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography663()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography664()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography665()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography666()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography667()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography668()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography669()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography670()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography671()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography672()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography673()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography674()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography675()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography676()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography677()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography678()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography679()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography680()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography681()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography682()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography683()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography684()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography685()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography686()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography687()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography688()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography689()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography690()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography691()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography692()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography693()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography694()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography695()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography696()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography697()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography698()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography699()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography700()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography701()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography702()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography703()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography704()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography705()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography706()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography707()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography708()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography709()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography710()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography711()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography712()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography713()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography714()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography715()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography716()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography717()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography718()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography719()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography720()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography721()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography722()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography723()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography724()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography725()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography726()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography727()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography728()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography729()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography730()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography731()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography732()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography733()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography734()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography735()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography736()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography737()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography738()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography739()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography740()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography741()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography742()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography743()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography744()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography745()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography746()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography747()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography748()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography749()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography750()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography751()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography752()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography753()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography754()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography755()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography756()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography757()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography758()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography759()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography760()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography761()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography762()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography763()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography764()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography765()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography766()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography767()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography768()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography769()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography770()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography771()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography772()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography773()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography774()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography775()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography776()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography777()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography778()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography779()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography780()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography781()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography782()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography783()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography784()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography785()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography786()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography787()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography788()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography789()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography790()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography791()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography792()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography793()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography794()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography795()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography796()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography797()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography798()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography799()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography800()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography801()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography802()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography803()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography804()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography805()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography806()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography807()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography808()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography809()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography810()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography811()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography812()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography813()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography814()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography815()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography816()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography817()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography818()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography819()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography820()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography821()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography822()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography823()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography824()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography825()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography826()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography827()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography828()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography829()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography830()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography831()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography832()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography833()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography834()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography835()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography836()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography837()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography838()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography839()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography840()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography841()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography842()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography843()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography844()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography845()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography846()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography847()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography848()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography849()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography850()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography851()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography852()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography853()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography854()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography855()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography856()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography857()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography858()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography859()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography860()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography861()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography862()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography863()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography864()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography865()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography866()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography867()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography868()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography869()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography870()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography871()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography872()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography873()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography874()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography875()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography876()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography877()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography878()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography879()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography880()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography881()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography882()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography883()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography884()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography885()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography886()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography887()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography888()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography889()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography890()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography891()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography892()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography893()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography894()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography895()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography896()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography897()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography898()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography899()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography900()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography901()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography902()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography903()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography904()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography905()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography906()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography907()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography908()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography909()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography910()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography911()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography912()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography913()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography914()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography915()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography916()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography917()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography918()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography919()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography920()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography921()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography922()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography923()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography924()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography925()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography926()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography927()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography928()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography929()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography930()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography931()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography932()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography933()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography934()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography935()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography936()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography937()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography938()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography939()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography940()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography941()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography942()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography943()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography944()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography945()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography946()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography947()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography948()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography949()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography950()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography951()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography952()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography953()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography954()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography955()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography956()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography957()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography958()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography959()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography960()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography961()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography962()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography963()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography964()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography965()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography966()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography967()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography968()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography969()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography970()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography971()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography972()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography973()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography974()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography975()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography976()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography977()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography978()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography979()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography980()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography981()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography982()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography983()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography984()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography985()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography986()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography987()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography988()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography989()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography990()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography991()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography992()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography993()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography994()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography995()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography996()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography997()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography998()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography999()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1000()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1001()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1002()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1003()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1004()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1005()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1006()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1007()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1008()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1009()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1010()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1011()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1012()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1013()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1014()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1015()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1016()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1017()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1018()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1019()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1020()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1021()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1022()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1023()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1024()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1025()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1026()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1027()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1028()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1029()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1030()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1031()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1032()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1033()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1034()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1035()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1036()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1037()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1038()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1039()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1040()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1041()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1042()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1043()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1044()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1045()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1046()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1047()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1048()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1049()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1050()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1051()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1052()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1053()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1054()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1055()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1056()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1057()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1058()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1059()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1060()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1061()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1062()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1063()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1064()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1065()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1066()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1067()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1068()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1069()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1070()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1071()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1072()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1073()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1074()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1075()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1076()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1077()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1078()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1079()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1080()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1081()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1082()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1083()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1084()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1085()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1086()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1087()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1088()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1089()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1090()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1091()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1092()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1093()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1094()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1095()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1096()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1097()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1098()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1099()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1100()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1101()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1102()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1103()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1104()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1105()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1106()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1107()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1108()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1109()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1110()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1111()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1112()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1113()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1114()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1115()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1116()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1117()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1118()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1119()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1120()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1121()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1122()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1123()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1124()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1125()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1126()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1127()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1128()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1129()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1130()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1131()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1132()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1133()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1134()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1135()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1136()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1137()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1138()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1139()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1140()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1141()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1142()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1143()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1144()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1145()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1146()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1147()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1148()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1149()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1150()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1151()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1152()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1153()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1154()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1155()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1156()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1157()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1158()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1159()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1160()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1161()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1162()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1163()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1164()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1165()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1166()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1167()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1168()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1169()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1170()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1171()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1172()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1173()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1174()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1175()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1176()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1177()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1178()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1179()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1180()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1181()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1182()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1183()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1184()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1185()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1186()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1187()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1188()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1189()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1190()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1191()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1192()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1193()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1194()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1195()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1196()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1197()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1198()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1199()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1200()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1201()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1202()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1203()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1204()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1205()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1206()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1207()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1208()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1209()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1210()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1211()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1212()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1213()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1214()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1215()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1216()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1217()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1218()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1219()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1220()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1221()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1222()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1223()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1224()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1225()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1226()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1227()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1228()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1229()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1230()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1231()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1232()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1233()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1234()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1235()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1236()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1237()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1238()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1239()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1240()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1241()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1242()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1243()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1244()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1245()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1246()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1247()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1248()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1249()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1250()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1251()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1252()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1253()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1254()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1255()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1256()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1257()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1258()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1259()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1260()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1261()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1262()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1263()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1264()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1265()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1266()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1267()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1268()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1269()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1270()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1271()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1272()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1273()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1274()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1275()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1276()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1277()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1278()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1279()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1280()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1281()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1282()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1283()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1284()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1285()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1286()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1287()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1288()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1289()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1290()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1291()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1292()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1293()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1294()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1295()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1296()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1297()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1298()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1299()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1300()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1301()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1302()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1303()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1304()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1305()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1306()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1307()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1308()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1309()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1310()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1311()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1312()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1313()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1314()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1315()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1316()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1317()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1318()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1319()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1320()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1321()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1322()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1323()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1324()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1325()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1326()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1327()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1328()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1329()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1330()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1331()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1332()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1333()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1334()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1335()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1336()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1337()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1338()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1339()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1340()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1341()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1342()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1343()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1344()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1345()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1346()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1347()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1348()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1349()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1350()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1351()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1352()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1353()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1354()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1355()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1356()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1357()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1358()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1359()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1360()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1361()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1362()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1363()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1364()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1365()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1366()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1367()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1368()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1369()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1370()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1371()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1372()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1373()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1374()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1375()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1376()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1377()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1378()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1379()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1380()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1381()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1382()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1383()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1384()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1385()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1386()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1387()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1388()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1389()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1390()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1391()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1392()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1393()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1394()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1395()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1396()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1397()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1398()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1399()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1400()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1401()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1402()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1403()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1404()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1405()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1406()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1407()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1408()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1409()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1410()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1411()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1412()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1413()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1414()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1415()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1416()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1417()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1418()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1419()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1420()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1421()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1422()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1423()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1424()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1425()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1426()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1427()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1428()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1429()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1430()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1431()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1432()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1433()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1434()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1435()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1436()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1437()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1438()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1439()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1440()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1441()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1442()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1443()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1444()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1445()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1446()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1447()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1448()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1449()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1450()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1451()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1452()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1453()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1454()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1455()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1456()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1457()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1458()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1459()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1460()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1461()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1462()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1463()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1464()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1465()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1466()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1467()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1468()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1469()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1470()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1471()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1472()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1473()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1474()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1475()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1476()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1477()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1478()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1479()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1480()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1481()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1482()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1483()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1484()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1485()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1486()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1487()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1488()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1489()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1490()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1491()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1492()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1493()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1494()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1495()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1496()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1497()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1498()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1499()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1500()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1501()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1502()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1503()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1504()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1505()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1506()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1507()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1508()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1509()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1510()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1511()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1512()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1513()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1514()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1515()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1516()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1517()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1518()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1519()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1520()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1521()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1522()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1523()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1524()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1525()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1526()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1527()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1528()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1529()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1530()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1531()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1532()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1533()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1534()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1535()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == false (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1536()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1537()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1538()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1539()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1540()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1541()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1542()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1543()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1544()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1545()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1546()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1547()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1548()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1549()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1550()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1551()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1552()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1553()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1554()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1555()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1556()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1557()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1558()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1559()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1560()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1561()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1562()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1563()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1564()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1565()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1566()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1567()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1568()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1569()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1570()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1571()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1572()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1573()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1574()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1575()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1576()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1577()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1578()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1579()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1580()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1581()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1582()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1583()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1584()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1585()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1586()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1587()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1588()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1589()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1590()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1591()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1592()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1593()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1594()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1595()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1596()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1597()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1598()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1599()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1600()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1601()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1602()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1603()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1604()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1605()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1606()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1607()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1608()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1609()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1610()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1611()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1612()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1613()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1614()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1615()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1616()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1617()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1618()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1619()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1620()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1621()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1622()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1623()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1624()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1625()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1626()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1627()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1628()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1629()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1630()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1631()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1632()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1633()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1634()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1635()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1636()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1637()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1638()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1639()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1640()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1641()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1642()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1643()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1644()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1645()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1646()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1647()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1648()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1649()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1650()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1651()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1652()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1653()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1654()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1655()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1656()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1657()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1658()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1659()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1660()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1661()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1662()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1663()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1664()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1665()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1666()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1667()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1668()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1669()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1670()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1671()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1672()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1673()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1674()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1675()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1676()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1677()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1678()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1679()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1680()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1681()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1682()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1683()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1684()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1685()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1686()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1687()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1688()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1689()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1690()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1691()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1692()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1693()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1694()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1695()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1696()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1697()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1698()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1699()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1700()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1701()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1702()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1703()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1704()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1705()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1706()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1707()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1708()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1709()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1710()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1711()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1712()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1713()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1714()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1715()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1716()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1717()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1718()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1719()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1720()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1721()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1722()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1723()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1724()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1725()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1726()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1727()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1728()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1729()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1730()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1731()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1732()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1733()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1734()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1735()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1736()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1737()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1738()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1739()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1740()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1741()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1742()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1743()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1744()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1745()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1746()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1747()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1748()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1749()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1750()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1751()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1752()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1753()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1754()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1755()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1756()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1757()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1758()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1759()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1760()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1761()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1762()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1763()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1764()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1765()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1766()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1767()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1768()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1769()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1770()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1771()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1772()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1773()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1774()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1775()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1776()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1777()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1778()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1779()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1780()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1781()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1782()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1783()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1784()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1785()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1786()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1787()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1788()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1789()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1790()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1791()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1792()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1793()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1794()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1795()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1796()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1797()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1798()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1799()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1800()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1801()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1802()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1803()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1804()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1805()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1806()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1807()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1808()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1809()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1810()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1811()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1812()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1813()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1814()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1815()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1816()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1817()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1818()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1819()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1820()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1821()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1822()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1823()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1824()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1825()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1826()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1827()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1828()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1829()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1830()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1831()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1832()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1833()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1834()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1835()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1836()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1837()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1838()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1839()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1840()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1841()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1842()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1843()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1844()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1845()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1846()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1847()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1848()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1849()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1850()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1851()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1852()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1853()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1854()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1855()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1856()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1857()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1858()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1859()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1860()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1861()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1862()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1863()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1864()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1865()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1866()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1867()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1868()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1869()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1870()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1871()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1872()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1873()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1874()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1875()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1876()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1877()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1878()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1879()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1880()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1881()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1882()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1883()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1884()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1885()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1886()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1887()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1888()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1889()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1890()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1891()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1892()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1893()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1894()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1895()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1896()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1897()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1898()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1899()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1900()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1901()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1902()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1903()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1904()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1905()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1906()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1907()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1908()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1909()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1910()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1911()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1912()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1913()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1914()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1915()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1916()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1917()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1918()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1919()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1920()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1921()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1922()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1923()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1924()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1925()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1926()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1927()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1928()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1929()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1930()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1931()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1932()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1933()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1934()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1935()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1936()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1937()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1938()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1939()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1940()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1941()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1942()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1943()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1944()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1945()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1946()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1947()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1948()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1949()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1950()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1951()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1952()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1953()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1954()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1955()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1956()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1957()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1958()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1959()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1960()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1961()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1962()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1963()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1964()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1965()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1966()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1967()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1968()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1969()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1970()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1971()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1972()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1973()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1974()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1975()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1976()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1977()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1978()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1979()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1980()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1981()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1982()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1983()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1984()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1985()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1986()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1987()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1988()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1989()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1990()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1991()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1992()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1993()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1994()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1995()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1996()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1997()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1998()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography1999()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2000()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2001()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2002()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2003()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2004()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2005()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2006()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2007()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2008()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2009()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2010()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2011()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2012()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2013()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2014()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2015()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2016()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2017()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2018()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2019()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2020()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2021()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2022()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2023()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2024()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2025()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2026()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2027()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2028()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2029()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2030()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2031()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2032()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2033()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2034()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2035()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2036()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2037()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2038()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2039()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2040()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2041()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2042()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2043()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2044()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2045()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2046()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2047()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2048()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2049()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2050()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2051()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2052()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2053()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2054()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2055()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2056()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2057()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2058()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2059()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2060()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2061()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2062()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2063()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2064()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2065()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2066()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2067()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2068()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2069()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2070()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2071()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2072()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2073()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2074()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2075()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2076()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2077()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2078()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2079()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2080()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2081()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2082()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2083()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2084()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2085()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2086()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2087()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2088()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2089()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2090()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2091()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2092()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2093()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2094()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2095()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2096()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2097()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2098()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2099()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2100()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2101()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2102()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2103()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2104()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2105()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2106()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2107()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2108()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2109()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2110()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2111()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2112()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2113()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2114()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2115()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2116()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2117()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2118()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2119()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2120()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2121()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2122()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2123()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2124()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2125()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2126()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2127()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2128()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2129()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2130()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2131()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2132()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2133()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2134()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2135()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2136()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2137()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2138()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2139()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2140()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2141()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2142()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2143()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2144()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2145()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2146()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2147()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2148()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2149()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2150()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2151()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2152()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2153()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2154()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2155()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2156()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2157()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2158()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2159()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2160()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2161()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2162()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2163()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2164()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2165()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2166()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2167()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2168()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2169()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2170()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2171()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2172()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2173()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2174()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2175()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2176()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2177()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2178()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2179()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2180()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2181()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2182()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2183()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2184()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2185()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2186()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2187()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2188()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2189()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2190()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2191()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2192()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2193()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2194()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2195()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2196()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2197()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2198()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2199()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2200()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2201()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2202()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2203()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2204()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2205()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2206()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2207()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2208()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2209()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2210()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2211()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2212()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2213()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2214()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2215()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2216()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2217()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2218()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2219()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2220()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2221()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2222()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2223()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2224()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2225()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2226()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2227()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2228()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2229()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2230()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2231()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2232()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2233()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2234()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2235()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2236()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2237()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2238()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2239()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2240()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2241()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2242()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2243()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2244()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2245()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2246()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2247()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2248()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2249()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2250()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2251()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2252()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2253()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2254()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2255()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2256()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2257()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2258()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2259()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2260()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2261()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2262()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2263()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2264()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2265()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2266()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2267()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2268()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2269()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2270()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2271()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2272()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2273()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2274()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2275()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2276()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2277()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2278()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2279()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2280()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2281()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2282()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2283()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2284()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2285()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2286()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2287()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2288()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2289()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2290()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2291()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2292()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2293()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2294()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2295()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2296()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2297()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2298()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2299()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2300()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2301()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2302()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2303()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == false (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2304()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2305()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2306()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2307()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2308()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2309()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2310()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2311()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2312()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2313()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2314()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2315()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2316()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2317()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2318()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2319()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2320()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2321()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2322()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2323()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2324()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2325()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2326()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2327()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2328()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2329()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2330()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2331()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2332()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2333()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2334()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2335()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2336()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2337()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2338()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2339()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2340()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2341()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2342()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2343()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2344()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2345()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2346()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2347()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2348()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2349()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2350()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2351()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2352()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2353()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2354()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2355()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2356()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2357()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2358()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2359()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2360()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2361()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2362()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2363()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2364()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2365()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2366()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2367()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2368()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2369()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2370()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2371()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2372()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2373()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2374()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2375()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2376()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2377()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2378()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2379()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2380()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2381()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2382()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2383()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2384()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2385()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2386()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2387()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2388()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2389()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2390()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2391()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2392()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2393()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2394()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2395()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2396()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2397()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2398()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2399()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2400()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2401()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2402()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2403()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2404()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2405()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2406()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2407()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2408()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2409()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2410()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2411()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2412()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2413()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2414()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2415()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2416()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2417()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2418()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2419()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2420()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2421()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2422()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2423()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2424()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2425()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2426()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2427()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2428()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2429()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2430()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2431()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2432()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2433()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2434()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2435()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2436()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2437()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2438()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2439()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2440()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2441()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2442()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2443()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2444()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2445()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2446()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2447()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2448()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2449()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2450()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2451()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2452()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2453()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2454()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2455()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2456()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2457()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2458()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2459()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2460()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2461()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2462()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2463()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2464()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2465()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2466()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2467()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2468()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2469()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2470()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2471()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2472()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2473()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2474()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2475()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2476()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2477()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2478()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2479()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2480()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2481()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2482()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2483()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2484()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2485()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2486()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2487()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2488()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2489()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2490()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2491()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2492()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2493()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2494()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2495()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2496()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2497()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2498()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2499()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2500()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2501()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2502()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2503()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2504()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2505()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2506()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2507()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2508()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2509()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2510()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2511()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2512()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2513()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2514()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2515()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2516()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2517()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2518()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2519()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2520()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2521()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2522()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2523()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2524()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2525()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2526()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2527()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2528()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2529()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2530()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2531()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2532()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2533()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2534()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2535()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2536()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2537()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2538()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2539()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2540()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2541()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2542()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2543()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2544()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2545()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2546()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2547()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2548()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2549()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2550()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2551()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2552()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2553()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2554()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2555()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2556()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2557()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2558()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2559()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == false (line 130)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2560()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2561()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2562()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2563()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2564()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2565()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2566()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2567()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2568()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2569()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2570()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2571()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2572()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2573()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2574()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2575()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2576()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2577()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2578()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2579()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2580()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2581()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2582()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2583()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2584()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2585()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2586()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2587()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2588()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2589()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2590()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2591()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2592()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2593()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2594()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2595()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2596()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2597()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2598()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2599()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2600()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2601()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2602()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2603()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2604()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2605()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2606()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2607()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2608()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2609()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2610()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2611()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2612()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2613()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2614()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2615()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2616()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2617()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2618()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2619()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2620()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2621()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2622()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2623()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2624()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2625()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2626()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2627()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2628()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2629()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2630()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2631()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2632()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2633()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2634()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2635()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2636()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2637()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2638()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2639()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2640()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2641()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2642()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2643()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2644()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2645()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2646()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2647()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2648()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2649()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2650()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2651()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2652()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2653()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2654()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2655()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2656()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2657()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2658()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2659()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2660()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2661()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2662()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2663()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2664()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2665()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2666()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2667()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2668()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2669()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2670()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2671()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2672()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2673()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2674()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2675()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2676()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2677()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2678()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2679()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2680()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2681()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2682()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2683()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2684()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2685()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2686()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2687()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2688()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2689()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2690()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2691()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2692()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2693()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2694()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2695()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2696()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2697()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2698()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2699()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2700()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2701()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2702()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2703()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2704()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2705()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2706()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2707()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2708()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2709()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2710()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2711()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2712()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2713()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2714()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2715()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2716()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2717()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2718()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2719()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2720()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2721()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2722()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2723()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2724()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2725()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2726()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2727()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2728()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2729()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2730()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2731()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2732()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2733()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2734()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2735()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2736()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2737()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2738()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2739()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2740()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2741()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2742()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2743()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2744()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2745()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2746()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2747()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2748()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2749()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2750()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2751()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2752()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2753()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2754()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2755()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2756()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2757()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2758()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2759()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2760()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2761()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2762()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2763()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2764()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2765()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2766()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2767()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2768()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2769()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2770()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2771()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2772()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2773()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2774()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2775()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2776()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2777()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2778()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2779()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2780()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2781()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2782()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2783()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2784()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2785()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2786()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2787()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2788()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2789()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2790()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2791()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2792()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2793()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2794()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2795()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2796()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2797()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2798()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2799()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2800()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2801()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2802()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2803()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2804()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2805()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2806()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2807()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2808()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2809()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2810()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2811()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2812()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2813()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2814()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2815()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2816()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2817()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2818()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2819()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2820()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2821()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2822()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2823()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2824()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2825()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2826()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2827()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2828()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2829()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2830()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2831()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2832()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2833()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2834()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2835()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2836()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2837()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2838()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2839()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2840()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2841()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2842()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2843()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2844()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2845()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2846()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2847()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2848()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2849()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2850()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2851()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2852()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2853()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2854()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2855()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2856()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2857()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2858()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2859()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2860()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2861()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2862()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2863()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2864()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2865()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2866()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2867()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2868()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2869()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2870()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2871()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2872()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2873()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2874()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2875()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2876()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2877()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2878()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2879()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2880()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2881()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2882()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2883()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2884()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2885()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2886()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2887()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2888()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2889()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2890()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2891()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2892()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2893()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2894()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2895()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2896()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2897()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2898()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2899()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2900()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2901()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2902()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2903()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2904()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2905()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2906()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2907()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2908()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2909()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2910()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2911()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2912()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2913()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2914()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2915()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2916()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2917()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2918()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2919()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2920()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2921()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2922()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2923()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2924()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2925()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2926()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2927()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2928()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2929()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2930()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2931()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2932()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2933()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2934()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2935()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2936()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2937()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2938()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2939()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2940()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2941()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2942()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2943()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == false (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2944()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2945()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2946()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2947()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2948()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2949()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2950()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2951()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2952()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2953()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2954()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2955()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2956()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2957()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2958()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2959()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2960()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2961()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2962()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2963()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2964()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2965()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2966()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2967()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2968()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2969()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2970()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2971()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2972()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2973()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2974()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2975()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2976()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2977()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2978()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2979()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2980()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2981()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2982()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2983()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2984()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2985()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2986()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2987()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2988()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2989()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2990()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2991()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2992()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2993()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2994()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2995()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2996()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2997()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2998()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography2999()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3000()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3001()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3002()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3003()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3004()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3005()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3006()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3007()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == false (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3008()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3009()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3010()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3011()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3012()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3013()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3014()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3015()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3016()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3017()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3018()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3019()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3020()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3021()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3022()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3023()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == false (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3024()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3025()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3026()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3027()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3028()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3029()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3030()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3031()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == false (line 196)
    // if ($i === $c) == true (line 203)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3032()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3033()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3034()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3035()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3036()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3037()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3038()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3039()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == false (line 180)
    // if ($process === \FALSE) == true (line 196)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3040()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3041()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3042()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3043()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3044()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3045()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3046()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3047()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3048()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3049()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3050()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3051()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3052()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3053()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3054()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3055()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == false (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3056()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3057()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3058()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3059()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3060()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3061()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3062()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3063()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == false (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3064()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3065()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3066()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3067()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == false (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3068()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3069()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3070()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == false (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3071()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == false (line 110)
    // if (\strpos($str, "\r") !== \FALSE) == true (line 116)
    // if ($reduce_linebreaks === \TRUE) == true (line 123)
    // if (\strpos($str, '<!--') !== \FALSE && \preg_match_all('#(<!\\-\\-.*?\\-\\->)#s', $str, $matches)) == true (line 130)
    // for (...) == true (line 132)
    // for (...) == false (line 132)
    // if (\strpos($str, '<pre') !== \FALSE) == true (line 141)
    // if ($this->protect_braced_quotes === \TRUE) == true (line 150)
    // for (...) == true (line 176)
    // if (\preg_match('#<(/*)(' . $this->block_elements . ').*?>#', $chunks[$i], $match)) == true (line 180)
    // if (\preg_match('#' . $this->skip_elements . '#', $match[2])) == true (line 182)
    // if ($match[1] === '') == true (line 187)
    // for (...) == false (line 176)
    // if (!\preg_match('/^\\s*<(?:' . $this->block_elements . ')/i', $str)) == true (line 213)
    // for (...) == true (line 222)
    // for (...) == false (line 222)
    // if ($reduce_linebreaks === \TRUE) == true (line 266)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAuto_typography3072()
{
    $str = m::mock('UntypedParameter_str_');
    $reduce_linebreaks = m::mock('UntypedParameter_reduce_linebreaks_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($str === '') == true (line 110)

    $actual = $this->cI_Typography->auto_typography($str, $reduce_linebreaks);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFormat_characters0()
{
    $str = m::mock('UntypedParameter_str_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($table)) == false (line 297)

    $actual = $this->cI_Typography->format_characters($str);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFormat_characters1()
{
    $str = m::mock('UntypedParameter_str_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!isset($table)) == true (line 297)

    $actual = $this->cI_Typography->format_characters($str);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testNl2br_except_pre0()
{
    $str = m::mock('UntypedParameter_str_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == false (line 412)

    $actual = $this->cI_Typography->nl2br_except_pre($str);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testNl2br_except_pre1()
{
    $str = m::mock('UntypedParameter_str_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 412)
    // if ($ct - 1 !== $i) == false (line 415)
    // for (...) == false (line 412)

    $actual = $this->cI_Typography->nl2br_except_pre($str);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testNl2br_except_pre2()
{
    $str = m::mock('UntypedParameter_str_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // for (...) == true (line 412)
    // if ($ct - 1 !== $i) == true (line 415)
    // for (...) == false (line 412)

    $actual = $this->cI_Typography->nl2br_except_pre($str);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}
}
