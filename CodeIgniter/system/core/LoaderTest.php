<?php

namespace tests;

use CI_Loader;
use Mockery as m;

class CI_LoaderTest extends \PHPUnit_Framework_TestCase
{
/**
* @var \CI_Loader
*/
protected $cI_Loader;

public function setUp()
{
    parent::setUp();

    $this->cI_Loader = new \CI_Loader();
}

public function testInitialize0()
{
    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->initialize();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testIs_loaded0()
{
    $class = m::mock('UntypedParameter_class_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->is_loaded($class);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLibrary0()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($library)) == false (line 192)
    // if (\is_array($library)) == false (line 196)
    // if ($params !== \NULL && !\is_array($params)) == false (line 213)

    $actual = $this->cI_Loader->library($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLibrary1()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($library)) == false (line 192)
    // if (\is_array($library)) == false (line 196)
    // if ($params !== \NULL && !\is_array($params)) == true (line 213)

    $actual = $this->cI_Loader->library($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLibrary2()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($library)) == false (line 192)
    // if (\is_array($library)) == true (line 196)

    $actual = $this->cI_Loader->library($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLibrary3()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($library)) == false (line 192)
    // if (\is_array($library)) == true (line 196)
    // if (\is_int($key)) == false (line 200)

    $actual = $this->cI_Loader->library($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLibrary4()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($library)) == false (line 192)
    // if (\is_array($library)) == true (line 196)
    // if (\is_int($key)) == true (line 200)

    $actual = $this->cI_Loader->library($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLibrary5()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($library)) == true (line 192)

    $actual = $this->cI_Loader->library($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel0()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel2()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel3()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel4()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel5()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel6()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel7()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel8()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel9()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel10()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel11()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel12()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel13()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel14()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel15()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel16()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel17()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel18()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel19()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel20()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel21()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel22()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel23()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel24()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel25()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel26()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel27()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel28()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel29()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel30()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel31()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel32()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel33()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel34()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel35()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel36()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel37()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel38()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel39()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel40()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel41()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel42()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel43()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel44()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel45()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel46()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel47()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel48()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel49()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel50()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel51()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel52()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel53()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel54()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel55()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel56()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel57()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel58()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel59()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel60()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel61()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel62()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel63()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel64()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel65()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel66()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel67()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel68()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel69()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel70()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel71()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel72()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel73()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel74()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel75()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel76()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel77()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel78()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel79()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel80()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel81()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel82()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel83()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel84()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel85()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel86()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel87()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel88()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel89()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel90()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel91()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel92()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel93()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel94()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel95()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel96()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel97()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel98()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel99()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel100()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel101()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel102()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel103()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel104()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel105()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel106()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel107()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel108()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel109()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel110()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel111()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel112()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel113()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel114()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel115()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel116()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel117()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel118()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel119()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel120()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel121()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel122()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel123()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel124()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel125()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel126()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel127()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel128()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel129()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel130()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel131()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel132()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel133()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel134()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel135()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel136()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel137()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel138()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel139()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel140()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel141()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel142()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel143()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel144()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel145()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel146()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel147()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel148()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel149()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel150()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel151()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel152()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel153()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel154()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel155()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel156()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel157()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel158()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel159()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel160()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel161()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel162()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel163()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel164()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel165()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel166()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel167()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel168()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel169()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel170()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel171()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel172()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel173()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel174()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel175()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel176()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel177()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel178()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel179()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel180()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel181()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel182()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel183()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel184()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel185()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel186()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel187()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel188()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel189()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel190()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel191()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel192()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel193()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel194()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel195()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel196()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel197()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel198()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel199()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel200()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel201()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel202()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel203()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel204()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel205()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel206()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel207()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel208()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel209()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel210()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel211()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel212()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel213()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel214()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel215()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel216()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel217()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel218()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel219()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel220()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel221()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel222()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel223()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel224()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel225()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel226()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel227()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel228()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel229()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel230()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel231()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel232()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel233()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel234()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel235()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel236()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel237()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel238()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel239()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel240()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel241()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel242()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel243()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel244()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel245()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel246()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel247()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel248()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel249()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel250()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel251()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel252()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel253()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel254()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel255()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel256()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel257()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel258()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel259()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel260()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel261()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel262()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel263()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel264()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == true (line 273)
    // throw new \RuntimeException('The model name you are loading is the name of a resource that is already being used: ' . $name) -> exception (line 275)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel265()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == true (line 267)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel266()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel267()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel268()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel269()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel270()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel271()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel272()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel273()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel274()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel275()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel276()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel277()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel278()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel279()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel280()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel281()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel282()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel283()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel284()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel285()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel286()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel287()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel288()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel289()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel290()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel291()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel292()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel293()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel294()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel295()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel296()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel297()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel298()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel299()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel300()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel301()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel302()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel303()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel304()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel305()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel306()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel307()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel308()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel309()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel310()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel311()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel312()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel313()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel314()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel315()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel316()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel317()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel318()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel319()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel320()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel321()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel322()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel323()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel324()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel325()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel326()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel327()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel328()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel329()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel330()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel331()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel332()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel333()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel334()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel335()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel336()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel337()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel338()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel339()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel340()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel341()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel342()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel343()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel344()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel345()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel346()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel347()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel348()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel349()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel350()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel351()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel352()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel353()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel354()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel355()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel356()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel357()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel358()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel359()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel360()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel361()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel362()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel363()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel364()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel365()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel366()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel367()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel368()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel369()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel370()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel371()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel372()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel373()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel374()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel375()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel376()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel377()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel378()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel379()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel380()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel381()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel382()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel383()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel384()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel385()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel386()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel387()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel388()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel389()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel390()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel391()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel392()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel393()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel394()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel395()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel396()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel397()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel398()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel399()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel400()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel401()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel402()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel403()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel404()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel405()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel406()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel407()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel408()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel409()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel410()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel411()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel412()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel413()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel414()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel415()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel416()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel417()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel418()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel419()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel420()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel421()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel422()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel423()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel424()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel425()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel426()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel427()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel428()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel429()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel430()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel431()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel432()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel433()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel434()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel435()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel436()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel437()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel438()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel439()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel440()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel441()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel442()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel443()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel444()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel445()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel446()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel447()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel448()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel449()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel450()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel451()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel452()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel453()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel454()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel455()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel456()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel457()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel458()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel459()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel460()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel461()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel462()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel463()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel464()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel465()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel466()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel467()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel468()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel469()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel470()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel471()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel472()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel473()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel474()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel475()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel476()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel477()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel478()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel479()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel480()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel481()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel482()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel483()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel484()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel485()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel486()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel487()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel488()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel489()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel490()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel491()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel492()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel493()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel494()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel495()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel496()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel497()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel498()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel499()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel500()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel501()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel502()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel503()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel504()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel505()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel506()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel507()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel508()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel509()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel510()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel511()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel512()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel513()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel514()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel515()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel516()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel517()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel518()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel519()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel520()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel521()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel522()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel523()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel524()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel525()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel526()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel527()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel528()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel529()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel530()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == true (line 273)
    // throw new \RuntimeException('The model name you are loading is the name of a resource that is already being used: ' . $name) -> exception (line 275)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel531()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == false (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == true (line 267)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel532()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel533()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel534()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel535()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel536()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel537()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel538()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel539()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel540()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel541()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel542()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel543()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel544()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel545()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel546()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel547()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel548()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel549()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel550()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel551()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel552()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel553()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel554()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel555()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel556()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel557()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel558()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel559()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel560()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel561()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel562()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel563()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel564()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel565()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel566()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel567()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel568()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel569()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel570()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel571()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel572()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel573()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel574()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel575()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel576()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel577()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel578()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel579()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel580()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel581()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel582()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel583()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel584()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel585()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel586()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel587()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel588()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel589()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel590()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel591()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel592()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel593()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel594()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel595()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel596()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel597()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel598()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel599()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel600()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel601()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel602()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel603()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel604()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel605()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel606()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel607()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel608()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel609()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel610()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel611()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel612()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel613()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel614()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel615()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel616()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel617()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel618()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel619()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel620()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel621()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel622()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel623()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel624()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel625()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel626()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel627()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel628()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel629()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel630()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel631()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel632()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel633()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel634()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel635()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel636()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel637()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel638()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel639()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel640()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel641()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel642()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel643()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel644()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel645()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel646()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel647()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel648()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel649()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel650()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel651()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel652()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel653()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel654()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel655()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel656()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel657()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel658()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel659()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel660()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel661()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel662()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel663()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel664()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel665()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel666()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel667()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel668()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel669()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel670()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel671()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel672()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel673()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel674()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel675()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel676()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel677()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel678()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel679()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel680()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel681()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel682()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel683()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel684()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel685()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel686()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel687()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel688()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel689()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel690()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel691()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel692()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel693()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel694()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel695()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel696()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel697()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel698()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel699()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel700()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel701()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel702()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel703()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel704()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel705()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel706()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel707()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel708()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel709()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel710()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel711()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel712()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel713()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel714()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel715()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel716()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel717()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel718()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel719()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel720()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel721()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel722()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel723()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel724()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel725()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel726()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel727()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel728()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel729()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel730()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel731()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel732()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel733()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel734()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel735()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel736()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel737()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel738()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel739()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel740()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel741()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel742()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel743()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel744()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel745()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel746()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel747()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel748()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel749()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel750()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel751()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel752()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel753()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel754()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel755()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel756()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel757()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel758()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel759()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel760()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel761()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel762()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel763()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel764()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel765()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel766()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel767()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel768()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel769()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel770()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel771()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel772()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel773()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel774()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel775()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel776()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel777()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel778()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel779()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel780()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel781()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel782()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel783()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel784()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel785()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel786()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel787()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel788()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel789()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel790()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel791()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel792()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel793()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel794()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel795()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel796()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == true (line 273)
    // throw new \RuntimeException('The model name you are loading is the name of a resource that is already being used: ' . $name) -> exception (line 275)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel797()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == false (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == true (line 267)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel798()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel799()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel800()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel801()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel802()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel803()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel804()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel805()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel806()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel807()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel808()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel809()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel810()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel811()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel812()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel813()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel814()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel815()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel816()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel817()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel818()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel819()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel820()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel821()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel822()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel823()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel824()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel825()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel826()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel827()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel828()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel829()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel830()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel831()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel832()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel833()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel834()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel835()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel836()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel837()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel838()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel839()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel840()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel841()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel842()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel843()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel844()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel845()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel846()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel847()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel848()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel849()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel850()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel851()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel852()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel853()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel854()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel855()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel856()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel857()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel858()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel859()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel860()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel861()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel862()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel863()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel864()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel865()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel866()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel867()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel868()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel869()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel870()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel871()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel872()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel873()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel874()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel875()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel876()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel877()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel878()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel879()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel880()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel881()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel882()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel883()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel884()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel885()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == false (line 278)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel886()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel887()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel888()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel889()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel890()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel891()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel892()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel893()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel894()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel895()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel896()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel897()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel898()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel899()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel900()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel901()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel902()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel903()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel904()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel905()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel906()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel907()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel908()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel909()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel910()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel911()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel912()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel913()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel914()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel915()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel916()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel917()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel918()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel919()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel920()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel921()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel922()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel923()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel924()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel925()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel926()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel927()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel928()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel929()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel930()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel931()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel932()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel933()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel934()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel935()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel936()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel937()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel938()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel939()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel940()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel941()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel942()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel943()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel944()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel945()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel946()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel947()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel948()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel949()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel950()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel951()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel952()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel953()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel954()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel955()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel956()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel957()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel958()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel959()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel960()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel961()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel962()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel963()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel964()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel965()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel966()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel967()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel968()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel969()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel970()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel971()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel972()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel973()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == false (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel974()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel975()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel976()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel977()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel978()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel979()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel980()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel981()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel982()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel983()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel984()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel985()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 296)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel986()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel987()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel988()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel989()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel990()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel991()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel992()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel993()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel994()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel995()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel996()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel997()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel998()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel999()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1000()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1001()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1002()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1003()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1004()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1005()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1006()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1007()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1008()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1009()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1010()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1011()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1012()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1013()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1014()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1015()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1016()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1017()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1018()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1019()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1020()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1021()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1022()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1023()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1024()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1025()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1026()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1027()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1028()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1029()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1030()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1031()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1032()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1033()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1034()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1035()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == false (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 309)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1036()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1037()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1038()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1039()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1040()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1041()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1042()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1043()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1044()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1045()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1046()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1047()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == false (line 315)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1048()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1049()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == false (line 328)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1050()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1051()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1052()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1053()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1054()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1055()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 338)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1056()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == false (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 338)
    // throw new \RuntimeException($mod_path . "models/" . $path . $model . ".php exists, but doesn't declare class " . $model) -> exception (line 340)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1057()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == false (line 352)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1058()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == false (line 346)
    // if (!\is_subclass_of($model, 'CI_Model')) == true (line 352)
    // throw new \RuntimeException("Class " . $model . " doesn't extend CI_Model") -> exception (line 354)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1059()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == false (line 318)
    // if (!\class_exists($model, \FALSE)) == true (line 328)
    // if (!\file_exists($mod_path . 'models/' . $path . $model . '.php')) == true (line 332)
    // if (!\class_exists($model, \FALSE)) == true (line 346)
    // throw new \RuntimeException('Unable to locate the model you have specified: ' . $model) -> exception (line 348)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1060()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == false (line 302)
    // if (\file_exists($app_path . $class . '.php')) == true (line 315)
    // if (!\class_exists($class, \FALSE)) == true (line 318)
    // throw new \RuntimeException($app_path . $class . ".php exists, but doesn't declare class " . $class) -> exception (line 320)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1061()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == false (line 273)
    // if ($db_conn !== \FALSE && !\class_exists('CI_DB', \FALSE)) == true (line 278)
    // if ($db_conn === \TRUE) == true (line 280)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 296)
    // if (\file_exists($app_path . 'Model.php')) == true (line 299)
    // if (!\class_exists('CI_Model', \FALSE)) == true (line 302)
    // throw new \RuntimeException($app_path . "Model.php exists, but doesn't declare class CI_Model") -> exception (line 304)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

/**
 * @expectedException \RuntimeException
 */
public function testModel1062()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == false (line 267)
    // if (isset($CI->{$name})) == true (line 273)
    // throw new \RuntimeException('The model name you are loading is the name of a resource that is already being used: ' . $name) -> exception (line 275)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1063()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == false (line 240)
    // if (($last_slash = \strrpos($model, '/')) !== \FALSE) == true (line 253)
    // if (empty($name)) == true (line 262)
    // if (\in_array($name, $this->_ci_models, \TRUE)) == true (line 267)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1064()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == true (line 240)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1065()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == false (line 236)
    // if (\is_array($model)) == true (line 240)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testModel1066()
{
    $model = m::mock('UntypedParameter_model_');
    $name = m::mock('UntypedParameter_name_');
    $db_conn = m::mock('UntypedParameter_db_conn_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (empty($model)) == true (line 236)

    $actual = $this->cI_Loader->model($model, $name, $db_conn);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDatabase0()
{
    $params = m::mock('UntypedParameter_params_');
    $return = m::mock('UntypedParameter_return_');
    $query_builder = m::mock('UntypedParameter_query_builder_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($return === \FALSE && $query_builder === \NULL && isset($CI->db) && \is_object($CI->db) && !empty($CI->db->conn_id)) == false (line 383)
    // if ($return === \TRUE) == false (line 390)

    $actual = $this->cI_Loader->database($params, $return, $query_builder);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDatabase1()
{
    $params = m::mock('UntypedParameter_params_');
    $return = m::mock('UntypedParameter_return_');
    $query_builder = m::mock('UntypedParameter_query_builder_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($return === \FALSE && $query_builder === \NULL && isset($CI->db) && \is_object($CI->db) && !empty($CI->db->conn_id)) == false (line 383)
    // if ($return === \TRUE) == true (line 390)

    $actual = $this->cI_Loader->database($params, $return, $query_builder);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDatabase2()
{
    $params = m::mock('UntypedParameter_params_');
    $return = m::mock('UntypedParameter_return_');
    $query_builder = m::mock('UntypedParameter_query_builder_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($return === \FALSE && $query_builder === \NULL && isset($CI->db) && \is_object($CI->db) && !empty($CI->db->conn_id)) == true (line 383)

    $actual = $this->cI_Loader->database($params, $return, $query_builder);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbutil0()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 417)
    // if ($return === \TRUE) == false (line 427)

    $actual = $this->cI_Loader->dbutil($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbutil1()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 417)
    // if ($return === \TRUE) == true (line 427)

    $actual = $this->cI_Loader->dbutil($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbutil2()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 417)
    // if ($return === \TRUE) == false (line 427)

    $actual = $this->cI_Loader->dbutil($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbutil3()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 417)
    // if ($return === \TRUE) == true (line 427)

    $actual = $this->cI_Loader->dbutil($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge0()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 448)
    // if (!empty($db->subdriver)) == false (line 457)
    // if ($return === \TRUE) == false (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge1()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 448)
    // if (!empty($db->subdriver)) == false (line 457)
    // if ($return === \TRUE) == true (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge2()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == false (line 460)
    // if ($return === \TRUE) == false (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge3()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == false (line 460)
    // if ($return === \TRUE) == true (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge4()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == true (line 460)
    // if ($return === \TRUE) == false (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge5()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == false (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == true (line 460)
    // if ($return === \TRUE) == true (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge6()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 448)
    // if (!empty($db->subdriver)) == false (line 457)
    // if ($return === \TRUE) == false (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge7()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 448)
    // if (!empty($db->subdriver)) == false (line 457)
    // if ($return === \TRUE) == true (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge8()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == false (line 460)
    // if ($return === \TRUE) == false (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge9()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == false (line 460)
    // if ($return === \TRUE) == true (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge10()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == true (line 460)
    // if ($return === \TRUE) == false (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDbforge11()
{
    $db = m::mock('UntypedParameter_db_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (!\is_object($db) or !$db instanceof \CI_DB) == true (line 448)
    // if (!empty($db->subdriver)) == true (line 457)
    // if (\file_exists($driver_path)) == true (line 460)
    // if ($return === \TRUE) == true (line 471)

    $actual = $this->cI_Loader->dbforge($db, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testView0()
{
    $view = m::mock('UntypedParameter_view_');
    $vars = m::mock('UntypedParameter_vars_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->view($view, $vars, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testFile0()
{
    $path = m::mock('UntypedParameter_path_');
    $return = m::mock('UntypedParameter_return_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->file($path, $return);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testVars0()
{
    $vars = m::mock('UntypedParameter_vars_');
    $val = m::mock('UntypedParameter_val_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->vars($vars, $val);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testVars1()
{
    $vars = m::mock('UntypedParameter_vars_');
    $val = m::mock('UntypedParameter_val_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->vars($vars, $val);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testClear_vars0()
{
    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->clear_vars();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_var0()
{
    $key = m::mock('UntypedParameter_key_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->get_var($key);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_vars0()
{
    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->get_vars();
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper0()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper1()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper2()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper3()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == false (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper4()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == false (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper5()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == true (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper6()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == true (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper7()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == true (line 621)
    // if (!\file_exists($base_helper)) == false (line 624)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper8()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if ($ext_loaded === \TRUE) == true (line 621)
    // if (!\file_exists($base_helper)) == true (line 624)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper9()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper10()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper11()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == false (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper12()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == false (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper13()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == true (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper14()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == true (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper15()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == true (line 621)
    // if (!\file_exists($base_helper)) == false (line 624)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper16()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == false (line 613)
    // if ($ext_loaded === \TRUE) == true (line 621)
    // if (!\file_exists($base_helper)) == true (line 624)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper17()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper18()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper19()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == false (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper20()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == false (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper21()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == true (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == false (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper22()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == false (line 621)
    // if (\file_exists($path . 'helpers/' . $helper . '.php')) == true (line 638)
    // if (!isset($this->_ci_helpers[$helper])) == true (line 649)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper23()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == true (line 621)
    // if (!\file_exists($base_helper)) == false (line 624)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper24()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == false (line 603)
    // if (\file_exists($path . 'helpers/' . $ext_helper . '.php')) == true (line 613)
    // if ($ext_loaded === \TRUE) == true (line 621)
    // if (!\file_exists($base_helper)) == true (line 624)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelper25()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (isset($this->_ci_helpers[$helper])) == true (line 603)

    $actual = $this->cI_Loader->helper($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testHelpers0()
{
    $helpers = m::mock('UntypedParameter_helpers_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->helpers($helpers);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testLanguage0()
{
    $files = m::mock('UntypedParameter_files_');
    $lang = m::mock('UntypedParameter_lang_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->language($files, $lang);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testConfig0()
{
    $file = m::mock('UntypedParameter_file_');
    $use_sections = m::mock('UntypedParameter_use_sections_');
    $fail_gracefully = m::mock('UntypedParameter_fail_gracefully_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->config($file, $use_sections, $fail_gracefully);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver0()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == false (line 726)
    // if (empty($library)) == false (line 742)
    // if (!\class_exists('CI_Driver_Library', \FALSE)) == false (line 747)
    // if (!\strpos($library, '/')) == false (line 755)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver1()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == false (line 726)
    // if (empty($library)) == false (line 742)
    // if (!\class_exists('CI_Driver_Library', \FALSE)) == false (line 747)
    // if (!\strpos($library, '/')) == true (line 755)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver2()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == false (line 726)
    // if (empty($library)) == false (line 742)
    // if (!\class_exists('CI_Driver_Library', \FALSE)) == true (line 747)
    // if (!\strpos($library, '/')) == false (line 755)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver3()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == false (line 726)
    // if (empty($library)) == false (line 742)
    // if (!\class_exists('CI_Driver_Library', \FALSE)) == true (line 747)
    // if (!\strpos($library, '/')) == true (line 755)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver4()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == false (line 726)
    // if (empty($library)) == true (line 742)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver5()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == true (line 726)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver6()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == true (line 726)
    // if (\is_int($key)) == false (line 730)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testDriver7()
{
    $library = m::mock('UntypedParameter_library_');
    $params = m::mock('UntypedParameter_params_');
    $object_name = m::mock('UntypedParameter_object_name_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if (\is_array($library)) == true (line 726)
    // if (\is_int($key)) == true (line 730)

    $actual = $this->cI_Loader->driver($library, $params, $object_name);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testAdd_package_path0()
{
    $path = m::mock('UntypedParameter_path_');
    $view_cascade = m::mock('UntypedParameter_view_cascade_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->add_package_path($path, $view_cascade);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testGet_package_paths0()
{
    $include_base = m::mock('UntypedParameter_include_base_');

    // TODO: Your mock expectations here

    $actual = $this->cI_Loader->get_package_paths($include_base);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path0()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == false (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == false (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path1()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == false (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == true (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path2()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == true (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == false (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path3()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == true (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == true (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path4()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == false (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == false (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == false (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path5()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == false (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == false (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == true (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path6()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == false (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == true (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == false (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path7()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == false (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == true (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == true (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path8()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == true (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == false (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == false (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path9()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == true (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == false (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == true (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path10()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == true (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == true (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == false (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path11()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == false (line 828)
    // if (($key = \array_search($path, $this->{$var})) !== \FALSE) == true (line 841)
    // if (isset($this->_ci_view_paths[$path . 'views/'])) == true (line 847)
    // if (($key = \array_search($path, $config->_config_paths)) !== \FALSE) == true (line 852)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}

public function testRemove_package_path12()
{
    $path = m::mock('UntypedParameter_path_');

    // TODO: Your mock expectations here

    // Traversed conditions
    // if ($path === '') == true (line 828)

    $actual = $this->cI_Loader->remove_package_path($path);
    $expected = null; // TODO: Expected value here
    $this->assertEquals($expected, $actual);
}
}
